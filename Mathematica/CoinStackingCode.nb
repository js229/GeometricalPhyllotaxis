(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     73072,       1857]
NotebookOptionsPosition[     69144,       1775]
NotebookOutlinePosition[     69606,       1793]
CellTagsIndexPosition[     69563,       1790]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
     RowBox[{"AutoGeneratedPackage", "->", "Automatic"}]}], "]"}], ";"}], 
  "\n"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[77]:=",ExpressionUUID->"7d77eaad-7cce-48eb-b198-8dc4dd759adc"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dPrint", "[", "x__", "]"}], " ", ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{"debug", ",", " ", 
       RowBox[{"Print", "[", "x", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellLabel->
  "In[317]:=",ExpressionUUID->"63698a6f-c9c8-4f3f-80bf-2e8b93070e6d"],

Cell[CellGroupData[{

Cell["Chain code", "Section",
 CellChangeTimes->{{3.8595354332704773`*^9, 
  3.8595354401520576`*^9}},ExpressionUUID->"6ab48122-af17-4dcf-b0ec-\
7c9b2b450180"],

Cell[CellGroupData[{

Cell["Utilities ", "Subsection",ExpressionUUID->"3fdd36e3-3992-4f1d-88ff-ec2aef2b86e3"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"diskZ", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "z_"}], "}"}], ",", "_"}], "]"}], "]"}], " ", ":=",
      " ", "z"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskX", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "_"}], "}"}], ",", "_"}], "]"}], "]"}], " ", ":=",
      " ", "x"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskXZ", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "z"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskRightX", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"x", "+", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskLeftX", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"x", "-", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskTopZ", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"z", "+", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskR", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", "r"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberRight", "[", "n_", "]"}], " ", ":=", " ", 
     RowBox[{"right", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberRight", "[", 
      RowBox[{"left", "[", "n_", "]"}], "]"}], " ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberLeft", "[", "n_", "]"}], " ", ":=", " ", 
     RowBox[{"left", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberLeft", "[", 
      RowBox[{"right", "[", "n_", "]"}], "]"}], " ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"leftAndRightNumbers", "[", "n_List", "]"}], " ", ":=", " ", 
     RowBox[{"Join", "@@", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"moveNumberRight", "/@", "n"}], ",", 
        RowBox[{"moveNumberLeft", "/@", "n"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bareNumber", "[", 
      RowBox[{"left", "[", "n_", "]"}], "]"}], "  ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bareNumber", "[", 
      RowBox[{"right", "[", "n_", "]"}], "]"}], " ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bareNumber", "[", "n_", "]"}], " ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bareNumberQ", "[", "n_", "]"}], " ", ":=", " ", 
     RowBox[{"n", "==", 
      RowBox[{"bareNumber", "[", "n", "]"}]}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveDiskRight", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      "\[IndentingNewLine]", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "+", "1"}], ",", "z"}], "}"}], ",", "r"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveDiskLeft", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      "\[IndentingNewLine]", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "-", "1"}], ",", "z"}], "}"}], ",", "r"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberedDiskRight", "[", 
      RowBox[{"n_", "->", "d_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"moveNumberRight", "[", "n", "]"}], "->", 
      RowBox[{"moveDiskRight", "[", "d", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberedDiskLeft", "[", 
      RowBox[{"n_", "->", "d_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"moveNumberLeft", "[", "n", "]"}], "->", 
      RowBox[{"moveDiskLeft", "[", "d", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDisk", "[", "n_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", " ", 
         RowBox[{
          RowBox[{"globalRun", "[", "\"\<CurrentDisks\>\"", "]"}], "[", "n", 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", "res", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"res", "=", " ", 
           RowBox[{
            RowBox[{"globalRun", "[", "\"\<PastDisks\>\"", "]"}], "[", "n", 
            "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", "res"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDisk", "[", 
      RowBox[{"right", "[", "n_", "]"}], "]"}], " ", ":=", " ", 
     RowBox[{"moveDiskRight", "[", 
      RowBox[{"getDisk", "[", "n", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDisk", "[", 
      RowBox[{"left", "[", "n_", "]"}], "]"}], " ", ":=", " ", 
     RowBox[{"moveDiskLeft", "[", 
      RowBox[{"getDisk", "[", "n", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diskIsLeft", "[", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=", 
    RowBox[{"x", "<", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diskIsRight", "[", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=", 
    RowBox[{"x", ">", 
     RowBox[{"1", "/", "2"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskIsNormalised", "[", "d_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"!", " ", 
        RowBox[{"diskIsLeft", "[", "d", "]"}]}], ")"}], " ", "&&", " ", 
      RowBox[{"(", 
       RowBox[{"!", " ", 
        RowBox[{"diskIsRight", "[", "d", "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskAndVisibleCopies", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "z"}], "}"}], ",", "r"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "+", "r"}], ">", 
          RowBox[{"1", "/", "2"}]}], ",", 
         RowBox[{"moveDiskLeft", "[", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "z"}], "}"}], ",", "r"}], "]"}], "]"}], ",", 
         RowBox[{"Nothing", "[", "]"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "-", "r"}], "<", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}]}], ",", 
         RowBox[{"moveDiskRight", "[", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "z"}], "}"}], ",", "r"}], "]"}], "]"}], ",", 
         RowBox[{"Nothing", "[", "]"}]}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"disksMaximum", "[", "]"}], " ", ":=", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Max", "@", 
      RowBox[{"Map", "[", 
       RowBox[{"diskTopZ", ",", 
        RowBox[{"globalRun", "[", "\"\<CurrentDisks\>\"", "]"}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"highestDiskZ", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Max", "@", 
      RowBox[{"Map", "[", 
       RowBox[{"diskZ", ",", 
        RowBox[{"Values", "@", 
         RowBox[{"run", "[", "\"\<CurrentDisks\>\"", "]"}]}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"smallestRadius", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Min", "@", 
      RowBox[{"Map", "[", 
       RowBox[{"diskR", ",", 
        RowBox[{"Values", "@", 
         RowBox[{"run", "[", "\"\<CurrentDisks\>\"", "]"}]}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "used", " ", "in", " ", "RunCoinStacking", " ", "as", " ", "well", " ", 
      "for", " ", "setup"}], ",", " ", 
     RowBox[{"so", " ", 
      RowBox[{"don", "'"}], "t", " ", "use", " ", "the", " ", "global"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nextRadius", "[", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "highestZ", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"highestZ", "=", 
         RowBox[{"highestDiskZ", "[", "globalRun", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
          "\"\<rFunction\>\"", "]"}], "[", "highestZ", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nextDiskNumber", "[", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"Max", "@", 
       RowBox[{"Keys", "[", 
        RowBox[{"globalRun", "[", "\"\<CurrentDisks\>\"", "]"}], "]"}]}], "+",
       "1"}]}], ";", 
    RowBox[{
     RowBox[{"nextChainNumber", "[", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"Keys", "[", 
        RowBox[{"globalRun", "[", "\"\<CompletedChainGraphs\>\"", "]"}], 
        "]"}], "]"}], "+", "1"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[78]:=",ExpressionUUID->"c79fdebc-f9ae-4df7-a656-4383f6352b8d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"extendDisksRight", "[", "nextR_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "extendedDisksRight", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"extendedDisksRight", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"globalRun", "[", "\"\<CurrentDisks\>\"", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"diskLeftX", "[", "#", "]"}], "+", "1"}], "     ", "<=", 
           " ", 
           RowBox[{
            RowBox[{"1", "/", "2"}], " ", "+", "nextR"}]}], "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"extendedDisksRight", " ", "=", " ", 
       RowBox[{"Association", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"moveNumberedDiskRight", ",", 
          RowBox[{"Normal", "[", "extendedDisksRight", "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "extendedDisksRight"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"extendDisksLeft", "[", "nextR_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "extendedDisksLeft", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"extendedDisksLeft", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"globalRun", "[", "\"\<CurrentDisks\>\"", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"diskRightX", "[", "#", "]"}], "-", "1", " ", "+", " ", 
            "nextR"}], " ", ">=", 
           RowBox[{
            RowBox[{"-", " ", "1"}], "/", "2"}]}], " ", "&"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"extendedDisksLeft", " ", "=", " ", 
       RowBox[{"Association", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"moveNumberedDiskLeft", ",", 
          RowBox[{"Normal", "[", "extendedDisksLeft", "]"}]}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "extendedDisksLeft"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"extendDisksLeftRight", "[", "nextR_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "extendedDisks", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"extendedDisks", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"globalRun", "[", "\"\<CurrentDisks\>\"", "]"}], ",", " ", 
         RowBox[{"extendDisksRight", "[", "nextR", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"extendedDisks", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Append", "[", 
        RowBox[{"extendedDisks", ",", " ", 
         RowBox[{"extendDisksLeft", "[", "nextR", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "extendedDisks"}]}], " ", "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[110]:=",ExpressionUUID->"10f5e5c5-8a50-4c6c-955c-3ca976dfbb0d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["run set up", "Section",ExpressionUUID->"77a3141e-802f-42c1-8a57-5eddf8adc775"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"executeRun", "[", 
      RowBox[{"run_", ",", 
       RowBox[{"chainMax_", ":", 
        RowBox[{"Missing", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "imax", ",", "res", ",", "timing"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Off", "[", 
         RowBox[{"SSSTriangle", "::", "tri"}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"globalRun", "=", "run"}], ";", "\[IndentingNewLine]", 
        RowBox[{"globalUsedPairs", "=", " ", 
         RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"globalSupportPairs", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MissingQ", "[", "chainMax", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
            "\"\<ChainMax\>\"", "]"}], "=", "chainMax"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"imax", " ", "=", " ", 
         RowBox[{
          RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
          "\"\<ChainMax\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"NumericQ", "[", "imax", "]"}]}], ",", 
          RowBox[{"imax", "=", "500"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "<=", " ", "imax"}], ",", 
             RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"runCompletesArena", "[", "]"}], ",", 
                RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"timing", " ", "=", " ", 
               RowBox[{"First", "@", 
                RowBox[{"Timing", "[", 
                 RowBox[{"addNextDisk", "[", "]"}], "]"}]}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "StringTemplate", "[", "\"\< Z `Z`; per-chain time `timing`\>\"", 
            "]"}], "[", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<chain\>\"", "->", 
              RowBox[{
               RowBox[{"nextChainNumber", "[", "]"}], "-", "1"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"\"\<disk\>\"", "->", " ", 
              RowBox[{
               RowBox[{"nextDiskNumber", "[", "]"}], "-", "1"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"\"\<Z\>\"", "->", " ", 
              RowBox[{"highestDiskZ", "[", "]"}]}], "\[IndentingNewLine]", 
             ",", 
             RowBox[{"\"\<parastichy\>\"", "->", "  ", 
              RowBox[{"Last", "[", 
               RowBox[{"globalRun", "[", "\"\<Parastichy\>\"", "]"}], "]"}]}],
              "\[IndentingNewLine]", ",", 
             RowBox[{"\"\<timing\>\"", "->", "timing"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"\"\<disktime\>\"", "->", " ", 
              RowBox[{
              "globalRun", "[", "\"\<CurrentTimePerDisk\>\"", "]"}]}]}], 
            "|>"}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "globalRun"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"15e75fbe-967c-44f1-86aa-fa34b59eca50"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"runCompletesArena", "[", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
            "\"\<ChainMax\>\"", "]"}], "!=", "\"\<Fill\>\""}], ",", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<Set chainmax\>\"", "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"disksMaximum", "[", "]"}], ">", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
            "\"\<CylinderLU\>\"", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", " ", 
          RowBox[{"2", " ", "*", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
             "\"\<rFunction\>\"", "]"}], "[", 
            RowBox[{
             RowBox[{
              RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
              "\"\<CylinderLU\>\"", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[150]:=",ExpressionUUID->"6dbf7845-f16b-4a34-8ebf-111941a4cda1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["addNextDisk", "Section",ExpressionUUID->"fe596e68-0dda-4801-93e2-f79621326472"],

Cell[BoxData[
 RowBox[{
  RowBox[{"addNextDisk", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nextR", ",", "path", ",", "n", ",", "g", ",", "timing"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nextR", "=", 
      RowBox[{"nextRadius", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"row", "=", 
      RowBox[{"findNextDiskFromSupportSet", "[", "nextR", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<NextDisk\>\"", "]"}], "=", " ", 
      RowBox[{"row", "[", "\"\<NextDisk\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<NextDiskRestsOn\>\"", "]"}], "=", " ", 
      RowBox[{"row", "[", "\"\<NextDiskRestsOn\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"n", "=", 
      RowBox[{"nextDiskNumber", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"globalUsedPairs", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"globalUsedPairs", ",", 
        RowBox[{
         RowBox[{"globalRun", "[", "\"\<NextDiskRestsOn\>\"", "]"}], "->", 
         "n"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<CurrentTimePerDisk\>\"", "]"}], "=", 
      "timing"}], ";", 
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<CurrentDisks\>\"", "]"}], "=", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"globalRun", "[", "\"\<CurrentDisks\>\"", "]"}], ",", 
        RowBox[{"n", "\[Rule]", 
         RowBox[{"globalRun", "[", "\"\<NextDisk\>\"", "]"}]}]}], "]"}]}], 
     ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"globalRun", "[", "\"\<CurrentChain\>\"", "]"}], "=", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"globalRun", "[", "\"\<CurrentChain\>\"", "]"}], ",", "n"}],
          "]"}]}], ";", 
       RowBox[{
        RowBox[{"globalRun", "[", "\"\<CurrentChain\>\"", "]"}], "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"globalRun", "[", "\"\<CurrentChain\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"diskX", "[", 
            RowBox[{"getDisk", "[", "#1", "]"}], "]"}], "&"}]}], "]"}]}], 
       ";"}], "*)"}], 
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], "=", 
      RowBox[{"updateContactGraph", "[", "n", "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<CurrentChainGraph\>\"", "]"}], "=", 
      RowBox[{"Subgraph", "[", 
       RowBox[{
        RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], ",", 
        RowBox[{"leftAndRightNumbers", "[", 
         RowBox[{"globalRun", "[", "\"\<CurrentChain\>\"", "]"}], "]"}]}], 
       "]"}]}], ";"}], "\[IndentingNewLine]", "*)"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[151]:=",ExpressionUUID->"a4b33fd4-cfad-47f7-b4b8-c7dc11ced13c"],

Cell[CellGroupData[{

Cell["findNextDiskFromSupportSet", "Subsection",ExpressionUUID->"fb7ad483-325c-48f9-903f-4c82bbc04077"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"findNextDiskFromSupportSet", "[", "nextR_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"supportTable", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"globalSupportPairs", "=", 
       RowBox[{"supportPairsFromTopChain", "[", "nextR", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"supportTable", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{"globalSupportPairs", ",", 
         RowBox[{
          RowBox[{"!", "#SelfIntersecting"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"supportTable", "=", " ", 
       RowBox[{"SortBy", "[", 
        RowBox[{"supportTable", ",", 
         RowBox[{
          RowBox[{"diskZ", "[", "#NextDisk", "]"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "supportTable", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<No valid supports\>\"", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"First", "[", "supportTable", "]"}]}], ";", 
      "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[117]:=",ExpressionUUID->"a04cc5cb-f6d3-44cb-948c-5de7b31d7bb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["initializeCurrentOverlaps", "Subsection",ExpressionUUID->"9ea1ed11-e01d-40d2-8705-8c5f28a8a27a"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[118]:=",ExpressionUUID->"42f9121c-e31e-4ddf-88fc-a070f493771f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["topChain", "Subsection",ExpressionUUID->"32ddfbab-160a-4ef8-9688-21a17a7fd521"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"topChain", "[", "graph_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "g", ",", "chain", ",", "graphXY", ",", "neighbours", ",", 
        "highestNode", ",", "lastNode", ",", "nextNode"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", "=", "graph"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"VertexList", "[", "g", "]"}], "==", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"left", "[", "1", "]"}], ",", "1", ",", "2", ",", 
            RowBox[{"right", "[", "1", "]"}]}], "}"}]}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1", ",", 
            RowBox[{"left", "[", "1", "]"}], ",", "2"}], "}"}], "]"}]}], 
        "]"}], ";", " ", 
       RowBox[{"(*", " ", "megabodge", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"VertexList", "[", "g", "]"}], "==", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"left", "[", "1", "]"}], ",", "1", ",", 
            RowBox[{"right", "[", "1", "]"}]}], "}"}]}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"right", "[", "1", "]"}], ",", 
            RowBox[{"left", "[", "1", "]"}]}], "}"}], "]"}]}], "]"}], ";", 
       " ", 
       RowBox[{"(*", " ", "megabodge", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"VertexList", "[", "g", "]"}], "==", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"right", "[", "1", "]"}]}], "}"}]}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"right", "[", "1", "]"}]}], "}"}], "]"}]}], "]"}], ";", 
       " ", 
       RowBox[{"(*", " ", "megabodge", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"VertexList", "[", "g", "]"}], "==", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"left", "[", "1", "]"}], ",", "1"}], "}"}]}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"left", "[", "1", "]"}], ",", 
            RowBox[{"right", "[", "1", "]"}]}], "}"}], "]"}]}], "]"}], ";", 
       " ", 
       RowBox[{"(*", " ", "megabodge", " ", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"graphXY", "[", "n_", "]"}], " ", ":=", " ", 
        RowBox[{"AnnotationValue", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"g", ",", "n"}], "}"}], ",", "VertexCoordinates"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"neighbours", "[", "n_", "]"}], " ", ":=", "  ", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"VertexList", "[", 
           RowBox[{"Graph", "[", 
            RowBox[{"EdgeList", "[", 
             RowBox[{"g", ",", 
              RowBox[{"n", "\[UndirectedEdge]", "_"}]}], "]"}], "]"}], "]"}], 
          ",", 
          RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"highestNode", "=", 
        RowBox[{"Last", "[", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"VertexList", "[", "g", "]"}], ",", "bareNumberQ"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"graphXY", "[", "#", "]"}], "]"}], "&"}]}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"chain", "=", " ", 
        RowBox[{"{", "highestNode", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nextRight", "[", "n_", "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"res", ",", "vectors", ",", "rightVectors"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"vectors", " ", "=", 
            RowBox[{"Association", "@", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "->", 
                 RowBox[{"vectorXY", "[", 
                  RowBox[{"n", ",", "#"}], "]"}]}], "&"}], ",", 
               RowBox[{"neighbours", "[", "n", "]"}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"rightVectors", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"vectors", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"First", "[", "#", "]"}], ">=", "0"}], "&"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "rightVectors", "]"}], ">", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", "usually", " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"rightVectors", "=", " ", 
               RowBox[{"SortBy", "[", 
                RowBox[{"rightVectors", ",", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Last", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"res", "=", 
               RowBox[{"First", "[", 
                RowBox[{"Keys", "[", "rightVectors", "]"}], "]"}]}]}], 
             "\[IndentingNewLine]", ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{
              "otherwise", " ", "go", " ", "backwards", " ", "and", " ", 
               "hence", " ", "sort", " ", "other", " ", "direction"}], " ", 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"vectors", "=", " ", 
               RowBox[{"SortBy", "[", 
                RowBox[{"vectors", ",", 
                 RowBox[{
                  RowBox[{"Last", "[", "#", "]"}], "&"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "vectors", "]"}], ">", "0"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"res", "=", 
                 RowBox[{"First", "[", 
                  RowBox[{"Keys", "[", "vectors", "]"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"res", "=", 
                 RowBox[{
                 "Missing", "[", "\"\<No edges from node\>\"", "]"}]}]}], 
               "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}],
            ";", "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", "10"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"lastNode", "=", 
            RowBox[{"Last", "[", "chain", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"nextNode", " ", "=", 
            RowBox[{"nextRight", "[", "lastNode", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MissingQ", "[", "nextNode", "]"}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{
              "_should", " ", "only", " ", "happen", " ", "for", " ", "1", 
               " ", 
               RowBox[{"left", "[", "1", "]"}]}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"chain", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"chain", ",", "nextNode"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"g", "=", 
            RowBox[{"EdgeDelete", "[", 
             RowBox[{"g", ",", 
              RowBox[{"lastNode", "\[UndirectedEdge]", "nextNode"}]}], 
             "]"}]}], ";"}], " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "could", " ", "move", " ", "up", " ", "into", " ", "backwards", 
            " ", "branch"}], " ", "*)"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MatchQ", "[", 
             RowBox[{
              RowBox[{"Last", "[", "chain", "]"}], ",", 
              RowBox[{"right", "[", "_", "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"chain", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"chain", ",", 
               RowBox[{"moveNumberLeft", "[", 
                RowBox[{"Last", "[", "chain", "]"}], "]"}]}], "]"}]}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"VertexList", "[", "g", "]"}], ",", 
              RowBox[{"left", "[", 
               RowBox[{"Last", "[", "chain", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"chain", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"chain", ",", 
               RowBox[{"left", "[", 
                RowBox[{"Last", "[", "chain", "]"}], "]"}]}], "]"}]}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "chain", "]"}], "==", 
             RowBox[{"First", "[", "chain", "]"}]}], ",", 
            RowBox[{
             RowBox[{"Break", "[", "]"}], ";"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "chain"}]}],
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[165]:=",ExpressionUUID->"23e63cff-41ae-4da1-ab93-1eb2e9df7891"],

Cell[BoxData[""], "Input",
 CellLabel->
  "In[363]:=",ExpressionUUID->"0f484384-5889-4ff3-88d7-8f8c1cc21f5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["supportPairsFromTopChain", "Subsection",ExpressionUUID->"900f452c-4418-404f-9471-5d58f41943c7"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"supportPairsFromTopChain", "[", "nextR_", "]"}], " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pairs", ",", "supportDisks", ",", "supportTable", ",", 
         "extendedDisks", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"supportDisks", "=", 
         RowBox[{"topChain", "[", 
          RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"supportDisks", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"bareNumber", "/@", " ", "supportDisks"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"supportDisks", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"leftRightCouldSupport", "[", 
              RowBox[{"#", ",", "nextR"}], "]"}], "&"}], ",", 
            "supportDisks"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"pairs", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"supportDisks", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"supportDisks", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "supportDisks", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", "supportDisks", "]"}]}], "}"}]}], "]"}],
            ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"pairs", " ", "=", " ", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"pairs", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"left", "[", "_", "]"}], ",", 
              RowBox[{"left", "[", "_", "]"}]}], "}"}], "|", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"right", "[", "_", "]"}], ",", 
              RowBox[{"right", "[", "_", "]"}]}], "}"}], "|", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"left", "[", "_", "]"}], ",", 
              RowBox[{"right", "[", "_", "]"}]}], "}"}]}]}], " ", "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"usedPairs", "=", " ", 
         RowBox[{"Keys", "[", "globalUsedPairs", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"usedPairs", " ", "=", " ", 
         RowBox[{"Union", "[", 
          RowBox[{"usedPairs", ",", 
           RowBox[{"Map", "[", 
            RowBox[{"moveNumberLeft", ",", "usedPairs", ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{"moveNumberRight", ",", "usedPairs", ",", 
             RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pairs", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{"pairs", ",", "usedPairs"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"supportTable", " ", "=", " ", 
         RowBox[{"Association", "@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"makeSupportTableRow", "[", "#", "]"}], "&"}], ",", 
            "pairs"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"assumes", " ", "r", " ", "nonincreasing"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"supportTable", "=", " ", 
         RowBox[{"filterForNonIncreasingR", "[", 
          RowBox[{"nextR", ",", "supportTable"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"supportTable", "=", "  ", 
         RowBox[{"calculateSupportTableSelfIntersecting", "[", 
          RowBox[{"supportTable", ",", "nextR"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "supportTable"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"leftRightCouldSupport", "[", 
      RowBox[{"node_", ",", "nextR_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xy", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"graphXY", "[", "n_", "]"}], " ", ":=", " ", 
         RowBox[{"AnnotationValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], ",", 
             "n"}], "}"}], ",", "VertexCoordinates"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"res", "=", " ", 
         RowBox[{"{", "node", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"xy", " ", "=", " ", 
         RowBox[{"graphXY", "[", "node", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"xy", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], " ", ">=", 
           RowBox[{
            RowBox[{"-", "0.5"}], "-", "  ", 
            RowBox[{"2", "*", " ", "nextR"}]}]}], ",", 
          RowBox[{"res", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"res", ",", 
             RowBox[{"left", "[", "node", "]"}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"xy", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], " ", "<=", "   ", 
           RowBox[{"0.5", "+", "  ", 
            RowBox[{"2", "*", " ", "nextR"}]}]}], ",", 
          RowBox[{"res", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"res", ",", 
             RowBox[{"right", "[", "node", "]"}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", "res"}]}], " ", "\[IndentingNewLine]", "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"makeSupportTableRow", "[", 
     RowBox[{"{", 
      RowBox[{"node1_", ",", "node2_"}], "}"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"res", ",", "hDiff"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hDiff", "=", " ", 
        RowBox[{
         RowBox[{"diskX", "[", 
          RowBox[{"getDisk", "[", "node2", "]"}], "]"}], "-", 
         RowBox[{"diskX", "[", 
          RowBox[{"getDisk", "[", "node1", "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"hDiff", "<=", " ", "0"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"Nothing", "[", "]"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"res", "=", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<NextDiskRestsOn\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"node1", ",", "node2"}], "}"}]}], "\[IndentingNewLine]", 
          ",", " ", 
          RowBox[{"\"\<EdgeSeparation\>\"", "->", 
           RowBox[{
            RowBox[{"diskLeftX", "[", 
             RowBox[{"getDisk", "[", "node2", "]"}], "]"}], "-", 
            RowBox[{"diskRightX", "[", 
             RowBox[{"getDisk", "[", "node1", "]"}], "]"}]}]}], " ", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"\"\<Used\>\"", "->", 
           RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"node1", ",", "node2"}], "}"}], "->", "res"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"filterForNonIncreasingR", "[", 
      RowBox[{"nextR_", ",", "supportTable_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{"supportTable", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", "#EdgeSeparation", "]"}], "<", " ", 
             RowBox[{"2", "*", " ", "nextR"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{"#", ",", 
              RowBox[{"\"\<NextDisk\>\"", "->", 
               RowBox[{"diskOnThisPair", "[", 
                RowBox[{"#NextDiskRestsOn", ",", "nextR"}], "]"}]}]}], "]"}], 
            "&"}], ",", "res"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{"res", ",", 
           RowBox[{
            RowBox[{"diskIsNormalised", "[", "#NextDisk", "]"}], "&"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "res"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calculateSupportTableSelfIntersecting", "[", 
      RowBox[{"sTable_", ",", "nextR_"}], "]"}], " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"res", ",", "extendedDisks", ",", "locationIntersectsQ"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"supportTable", "=", "sTable"}], ";", "\[IndentingNewLine]", 
        RowBox[{"extendedDisks", " ", "=", " ", 
         RowBox[{"extendDisksLeftRight", "[", " ", "nextR", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"locationIntersectsQ", "[", "d_", "]"}], " ", ":=", " ", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"Or", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"diskdiskIntersectionQ", "[", 
              RowBox[{"d", ",", "#"}], "]"}], "&"}], ",", "extendedDisks"}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"supportTable", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{"#", ",", 
              RowBox[{"\"\<SelfIntersecting\>\"", "->", 
               RowBox[{"locationIntersectsQ", "[", "#NextDisk", "]"}]}]}], 
             "]"}], "&"}], ",", "supportTable"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "supportTable"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskOnThisPair", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n1_", ",", "n2_"}], "}"}], ",", "r_"}], "]"}], " ", ":=", 
     " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "res", ",", "d1", ",", "d2", ",", "xl", ",", "xr", ",", "xres"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"d1", " ", "=", " ", 
         RowBox[{"getDisk", "[", "n1", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d2", " ", "=", " ", 
         RowBox[{"getDisk", "[", "n2", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"diskdiskUpperTouchingPoint", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"d1", ",", "d2"}], "}"}], ",", "r"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", "res", "]"}], ",", 
          RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"no", " ", "overlap"}], " ", "*)"}], " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Disk", "[", 
         RowBox[{"res", ",", "r"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskdiskIntersectionQ", "[", 
      RowBox[{
       RowBox[{"Disk", "[", 
        RowBox[{"xy1_", ",", "r1_"}], "]"}], ",", 
       RowBox[{"Disk", "[", 
        RowBox[{"xy2_", ",", "r2_"}], "]"}]}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"xy1", "-", "xy2"}], ",", "2"}], "]"}], " ", "<", " ", 
      RowBox[{"(", 
       RowBox[{"r1", "+", " ", "r2"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[135]:=",ExpressionUUID->"02fccc85-fef0-4c13-84c1-f73552faeba6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["updateContactGraph", "Subsection",ExpressionUUID->"1010e017-b941-42de-9bd2-be5b0763ab01"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"updateContactGraph", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "g", ",", "n1", ",", "n2", ",", "d", ",", "d1", ",", "d2", ",", 
       "d1Left"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", " ", "=", " ", 
       RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n1", ",", "n2"}], "}"}], "=", " ", 
       RowBox[{"globalRun", "[", "\"\<NextDiskRestsOn\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"d", ",", "d1", ",", "d2"}], "}"}], " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"getDisk", "[", "n", "]"}], ",", 
         RowBox[{"getDisk", "[", "n1", "]"}], ",", 
         RowBox[{"getDisk", "[", "n2", "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", " ", "=", " ", 
       RowBox[{"vertexAddWithCoordinates", "[", 
        RowBox[{"g", ",", "n", ",", 
         RowBox[{"diskXZ", "[", "d", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", " ", "=", " ", 
       RowBox[{"vertexAddWithCoordinates", "[", 
        RowBox[{"g", ",", "n1", ",", 
         RowBox[{"diskXZ", "[", "d1", "]"}]}], "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"surely", " ", "not", " ", "needed"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"g", " ", "=", " ", 
       RowBox[{"vertexAddWithCoordinates", "[", 
        RowBox[{"g", ",", "n2", ",", 
         RowBox[{"diskXZ", "[", "d2", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", " ", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"n1", " ", "\[UndirectedEdge]", " ", "n"}], ",", 
           RowBox[{"n", " ", "\[UndirectedEdge]", " ", "n2"}]}], " ", "}"}]}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"g", " ", "=", " ", 
       RowBox[{"Graph", "[", 
        RowBox[{"g", ",", 
         RowBox[{"AnnotationRules", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"n1", " ", "\[UndirectedEdge]", " ", "n"}], "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"EdgeStyle", "\[Rule]", " ", "Red"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"n", " ", "\[UndirectedEdge]", " ", "n2"}], " ", "->", 
             RowBox[{"{", " ", 
              RowBox[{"EdgeStyle", "->", "Blue"}], "}"}]}]}], "}"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "g"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[127]:=",ExpressionUUID->"7b6e07ad-c2cf-4ede-864a-e066b48066f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vertexAddWithCoordinates", "[", 
    RowBox[{"g_", ",", "v_", ",", "vxy_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vc", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"VertexList", "[", "g", "]"}], ",", "v"}], "]"}], ",", 
        RowBox[{"Return", "[", "g", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"VertexAdd", "[", 
        RowBox[{"g", ",", "v"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vc", " ", "=", " ", 
       RowBox[{"AnnotationValue", "[", 
        RowBox[{"g", ",", "VertexCoordinates"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vc", " ", "=", " ", 
       RowBox[{"Append", "[", 
        RowBox[{"vc", ",", "vxy"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"Annotate", "[", 
        RowBox[{"res", ",", 
         RowBox[{"VertexCoordinates", "->", "vc"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[128]:=",ExpressionUUID->"a9cf26b1-be1e-4622-b662-546cfd655b8a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Disk calculations", "Section",ExpressionUUID->"bff67e66-cad0-497c-adf1-b1d32240d7a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"for", " ", "some", " ", "ics"}], ",", " ", 
    RowBox[{
     RowBox[{"couldn", "'"}], "t", " ", "guarantee", " ", "the", " ", "lower",
      " ", "one", " ", "is", " ", "discardable"}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "but", " ", "should", " ", "be", " ", "provided", " ", "pattern", " ", 
     "is", " ", "a", " ", "dropped", " ", "coin", " ", "one"}]}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"diskdiskUpperTouchingPoint", "[", 
      RowBox[{"pairDisks_", ",", "r_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "lrPoints", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lrPoints", "=", " ", 
         RowBox[{"newdiskdiskTouchingPoint", "[", 
          RowBox[{"pairDisks", ",", "r"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", "lrPoints", "]"}], ",", 
          RowBox[{"Return", "[", "lrPoints", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Last", "[", 
         RowBox[{"SortBy", "[", 
          RowBox[{"lrPoints", ",", 
           RowBox[{
            RowBox[{"N", "@", 
             RowBox[{"Last", "[", "#", "]"}]}], "&"}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.856890650008703*^9, 3.85689067286756*^9}, {
   3.8568920185899725`*^9, 3.8568920625893984`*^9}, {3.8571152866804256`*^9, 
   3.8571153034394283`*^9}, {3.8571171134824324`*^9, 
   3.8571171413767424`*^9}, {3.8571171853168*^9, 3.8571172283028445`*^9}, 
   3.8571269932151995`*^9, {3.857127151449848*^9, 3.857127168930334*^9}, {
   3.8571273299195204`*^9, 3.8571273327408686`*^9}, {3.8571273879771347`*^9, 
   3.8571274361429415`*^9}, {3.8571274968993864`*^9, 
   3.8571275846370783`*^9}, {3.8571277374939375`*^9, 3.857127777817645*^9}, {
   3.8595520546920843`*^9, 3.8595521077101665`*^9}, {3.866519729650925*^9, 
   3.866519763060012*^9}, {3.8665200021203227`*^9, 3.86652001638052*^9}, {
   3.866520072028064*^9, 3.86652009168478*^9}, {3.8665201824392138`*^9, 
   3.8665202129287567`*^9}, {3.8665206311964407`*^9, 
   3.8665206382302966`*^9}, {3.872942452026597*^9, 3.8729424533077607`*^9}, {
   3.8729425042387223`*^9, 3.8729425616169806`*^9}, {3.872942765725312*^9, 
   3.8729427682637024`*^9}, 3.8729428523247423`*^9, {3.8730265601502943`*^9, 
   3.8730265605723314`*^9}, 3.875086311265438*^9},
 CellLabel->
  "In[129]:=",ExpressionUUID->"f84550c7-7952-4387-a527-80b00981d42e"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"newdiskdiskTouchingPoint", "[", 
     RowBox[{"diskPair_", ",", "r_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c1", ",", "c2", ",", "r1", ",", "r2", ",", "interdisk", ",", 
        "interdiskVectorNorm", ",", "interdiskNormal", ",", 
        "\[IndentingNewLine]", "angle", ",", "vector", ",", "normal", ",", 
        "interdiskVector"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"c1", ",", "c2"}], "}"}], "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"diskXZ", ",", "diskPair"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r1", ",", "r2"}], "}"}], "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"diskR", ",", "diskPair"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"interdiskVector", " ", "=", " ", 
        RowBox[{"c2", "-", "c1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"interdisk", " ", "=", " ", 
        RowBox[{"Norm", "[", "interdiskVector", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"interdiskVectorNorm", " ", "=", " ", 
        RowBox[{"interdiskVector", "/", 
         RowBox[{"Norm", "[", "interdiskVector", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"interdiskNormal", " ", "=", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"interdiskVectorNorm", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"interdiskVectorNorm", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"angle", " ", "=", " ", 
        RowBox[{"sssTriangleInteriorAngle", "[", 
         RowBox[{
          RowBox[{"r2", "+", "r"}], ",", 
          RowBox[{"r", "+", "r1"}], ",", "interdisk"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vector", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r1", "+", "r"}], ")"}], "*", 
         RowBox[{"Cos", "[", "angle", "]"}], "*", "interdiskVectorNorm"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"normal", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r1", "+", "r"}], ")"}], "*", 
         RowBox[{"Sin", "[", "angle", "]"}], "*", " ", "interdiskNormal"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c1", "+", "vector", "+", "normal"}], ",", 
         RowBox[{"c1", "+", "vector", "-", "normal"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sssTriangleInteriorAngle", "[", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tri", ",", "angle"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tri", " ", "=", 
         RowBox[{"SSSTriangle", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "tri", "]"}], "==", "SSSTriangle"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"Missing", "[", "\"\<Not a triangle\>\"", "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"angle", " ", "=", " ", 
         RowBox[{"TriangleMeasurement", "[", 
          RowBox[{"tri", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<InteriorAngle\>\"", ",", "1"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", "angle"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8730833516850986`*^9, 3.873083421006345*^9}, {
  3.873084012228471*^9, 3.8730841618440323`*^9}, {3.8750863403619423`*^9, 
  3.875086345990908*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"852c2853-bfd6-4866-bf92-ccc59ded20a4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tryToCompleteCurrentChain", "[", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "res", ",", "nodeList", ",", "lrNodes", ",", "lrCases", ",", 
        "lrPaths"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"globalRun", "[", "\"\<CurrentChainNodePath\>\"", "]"}], "=", 
        RowBox[{"Missing", "[", "\"\<No chain\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"nodeList", " ", "=", " ", 
        RowBox[{"VertexList", "@", 
         RowBox[{"globalRun", "[", "\"\<CurrentChainGraph\>\"", "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"lrNodes", " ", "=", " ", 
        RowBox[{"Cases", "[", 
         RowBox[{"nodeList", ",", 
          RowBox[{
           RowBox[{"left", "[", "_", "]"}], " ", "|", " ", 
           RowBox[{"right", "[", "_", "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lrCases", " ", "=", " ", 
        RowBox[{"Association", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"nodeList", ",", 
               RowBox[{"bareNumber", "[", "#", "]"}]}], "]"}]}], "&"}], ",", 
           "lrNodes"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"lrCases", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"lrCases", ",", "TrueQ"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "lrCases", "]"}], "==", "0"}], ",", 
         RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"lrPaths", " ", "=", " ", 
        RowBox[{"Association", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", 
             RowBox[{"lrNodePath", "[", 
              RowBox[{"#", ",", 
               RowBox[{"globalRun", "[", "\"\<CurrentChainGraph\>\"", "]"}]}],
               "]"}]}], "&"}], ",", 
           RowBox[{"Keys", "@", "lrCases"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lrPaths", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"lrPaths", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "lrPaths", "]"}], "==", "0"}], ",", 
         RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "lrPaths", "]"}], ">", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<Multiple paths\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "lrPaths", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"globalRun", "[", "\"\<CurrentChainGraph\>\"", "]"}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"globalRun", "[", "\"\<CurrentChainNodePath\>\"", "]"}], "=", 
        " ", 
        RowBox[{"First", "@", 
         RowBox[{"First", "[", "lrPaths", "]"}]}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lrNodePath", "[", 
   RowBox[{"lrNode_", ",", "g_"}], "]"}], " ", ":=", " ", 
  RowBox[{"FindPath", "[", 
   RowBox[{"g", ",", "lrNode", ",", 
    RowBox[{"bareNumber", "[", "lrNode", "]"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[132]:=",ExpressionUUID->"13d281b0-6a41-489c-b446-b5db095d3c80"],

Cell[CellGroupData[{

Cell["setUpNewChain", "Subsection",ExpressionUUID->"01d1434a-eda7-4349-8ab4-357211356ce8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setUpNewChain", "[", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"chainNumber", ",", "completedChainGraph"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"completedChainGraph", " ", "=", " ", 
      RowBox[{"globalRun", "[", "\"\<CurrentChainGraph\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"chainNumber", " ", "=", " ", 
      RowBox[{"nextChainNumber", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<CompletedChainGraphs\>\"", "]"}], "=", 
      " ", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"globalRun", "[", "\"\<CompletedChainGraphs\>\"", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"chainNumber", "->", "completedChainGraph"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<CompletedChainNodePaths\>\"", "]"}], "=",
       " ", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"globalRun", "[", "\"\<CompletedChainNodePaths\>\"", "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"chainNumber", "->", 
         RowBox[{"globalRun", "[", "\"\<CurrentChainNodePath\>\"", "]"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<PastDisks\>\"", "]"}], "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"globalRun", "[", "\"\<PastDisks\>\"", "]"}], ",", 
        RowBox[{"globalRun", "[", "\"\<CurrentDisks\>\"", "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<CurrentDisks\>\"", "]"}], "=", " ", 
      RowBox[{"KeyTake", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"globalRun", "[", "\"\<CurrentDisks\>\"", "]"}], ",", 
        RowBox[{"globalRun", "[", "\"\<CurrentChain\>\"", "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<CurrentChain\>\"", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<CurrentOverlaps\>\"", "]"}], " ", "=", 
      " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<UsedOverlaps\>\"", "]"}], "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"globalRun", "[", "\"\<CurrentChainGraph\>\"", "]"}], " ", "=", 
      " ", 
      RowBox[{"Graph", "[", 
       RowBox[{"{", "}"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[134]:=",ExpressionUUID->"094506f4-5e55-42eb-9b28-3d13aa3bb834"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{951, 523.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e0a65ce9-d3e5-4751-af7c-19a13d9af0b6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 332, 9, 70, "Input",ExpressionUUID->"7d77eaad-7cce-48eb-b198-8dc4dd759adc",
 InitializationCell->True],
Cell[893, 31, 406, 11, 94, "Input",ExpressionUUID->"63698a6f-c9c8-4f3f-80bf-2e8b93070e6d"],
Cell[CellGroupData[{
Cell[1324, 46, 159, 3, 74, "Section",ExpressionUUID->"6ab48122-af17-4dcf-b0ec-7c9b2b450180"],
Cell[CellGroupData[{
Cell[1508, 53, 87, 0, 59, "Subsection",ExpressionUUID->"3fdd36e3-3992-4f1d-88ff-ec2aef2b86e3"],
Cell[1598, 55, 11144, 321, 1242, "Input",ExpressionUUID->"c79fdebc-f9ae-4df7-a656-4383f6352b8d",
 InitializationCell->True],
Cell[12745, 378, 3253, 76, 531, "Input",ExpressionUUID->"10f5e5c5-8a50-4c6c-955c-3ca976dfbb0d",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16047, 460, 84, 0, 74, "Section",ExpressionUUID->"77a3141e-802f-42c1-8a57-5eddf8adc775"],
Cell[16134, 462, 3982, 93, 614, "Input",ExpressionUUID->"15e75fbe-967c-44f1-86aa-fa34b59eca50",
 InitializationCell->True],
Cell[20119, 557, 1623, 42, 217, "Input",ExpressionUUID->"6dbf7845-f16b-4a34-8ebf-111941a4cda1",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[21779, 604, 85, 0, 74, "Section",ExpressionUUID->"fe596e68-0dda-4801-93e2-f79621326472"],
Cell[21867, 606, 3004, 74, 363, "Input",ExpressionUUID->"a4b33fd4-cfad-47f7-b4b8-c7dc11ced13c",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[24896, 684, 103, 0, 59, "Subsection",ExpressionUUID->"fb7ad483-325c-48f9-903f-4c82bbc04077"],
Cell[25002, 686, 1464, 37, 196, "Input",ExpressionUUID->"a04cc5cb-f6d3-44cb-948c-5de7b31d7bb1",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[26503, 728, 102, 0, 59, "Subsection",ExpressionUUID->"9ea1ed11-e01d-40d2-8705-8c5f28a8a27a"],
Cell[26608, 730, 190, 4, 91, "Input",ExpressionUUID->"42f9121c-e31e-4ddf-88fc-a070f493771f",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[26835, 739, 85, 0, 59, "Subsection",ExpressionUUID->"32ddfbab-160a-4ef8-9688-21a17a7fd521"],
Cell[26923, 741, 10187, 246, 1000, "Input",ExpressionUUID->"23e63cff-41ae-4da1-ab93-1eb2e9df7891",
 InitializationCell->True],
Cell[37113, 989, 109, 2, 31, "Input",ExpressionUUID->"0f484384-5889-4ff3-88d7-8f8c1cc21f5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37259, 996, 101, 0, 59, "Subsection",ExpressionUUID->"900f452c-4418-404f-9471-5d58f41943c7"],
Cell[37363, 998, 13004, 317, 1599, "Input",ExpressionUUID->"02fccc85-fef0-4c13-84c1-f73552faeba6",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[50404, 1320, 95, 0, 59, "Subsection",ExpressionUUID->"1010e017-b941-42de-9bd2-be5b0763ab01"],
Cell[50502, 1322, 2979, 72, 363, "Input",ExpressionUUID->"7b6e07ad-c2cf-4ede-864a-e066b48066f4",
 InitializationCell->True],
Cell[53484, 1396, 1386, 35, 217, "Input",ExpressionUUID->"a9cf26b1-be1e-4622-b662-546cfd655b8a",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54919, 1437, 91, 0, 58, "Section",ExpressionUUID->"bff67e66-cad0-497c-adf1-b1d32240d7a9"],
Cell[55013, 1439, 2731, 56, 238, "Input",ExpressionUUID->"f84550c7-7952-4387-a527-80b00981d42e",
 InitializationCell->True],
Cell[57747, 1497, 4245, 102, 593, "Input",ExpressionUUID->"852c2853-bfd6-4866-bf92-ccc59ded20a4",
 InitializationCell->True],
Cell[61995, 1601, 4030, 98, 531, "Input",ExpressionUUID->"13d281b0-6a41-489c-b446-b5db095d3c80",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[66050, 1703, 90, 0, 59, "Subsection",ExpressionUUID->"01d1434a-eda7-4349-8ab4-357211356ce8"],
Cell[66143, 1705, 2973, 66, 531, "Input",ExpressionUUID->"094506f4-5e55-42eb-9b28-3d13aa3bb834",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}
]
*)

