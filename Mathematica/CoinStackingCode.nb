(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    128953,       3335]
NotebookOptionsPosition[    123430,       3229]
NotebookOutlinePosition[    123862,       3246]
CellTagsIndexPosition[    123819,       3243]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
     RowBox[{"AutoGeneratedPackage", "->", "Automatic"}]}], "]"}], ";"}], 
  "\n"}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[372]:=",ExpressionUUID->"7d77eaad-7cce-48eb-b198-8dc4dd759adc"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dPrint", "[", "x__", "]"}], " ", ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{"debug", ",", " ", 
       RowBox[{"Print", "[", "x", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellLabel->
  "In[190]:=",ExpressionUUID->"63698a6f-c9c8-4f3f-80bf-2e8b93070e6d"],

Cell[CellGroupData[{

Cell["Chain code", "Section",
 CellChangeTimes->{{3.8595354332704773`*^9, 
  3.8595354401520576`*^9}},ExpressionUUID->"6ab48122-af17-4dcf-b0ec-\
7c9b2b450180"],

Cell[CellGroupData[{

Cell["Utilities ", "Subsection",ExpressionUUID->"3fdd36e3-3992-4f1d-88ff-ec2aef2b86e3"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"diskZ", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "z_"}], "}"}], ",", "_"}], "]"}], "]"}], " ", ":=",
      " ", "z"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskX", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "_"}], "}"}], ",", "_"}], "]"}], "]"}], " ", ":=",
      " ", "x"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskXZ", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "z"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskRightX", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"x", "+", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskLeftX", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"x", "-", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskTopZ", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"z", "+", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskBottomZ", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"z", "-", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskR", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", "r"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberRight", "[", "n_", "]"}], " ", ":=", " ", 
     RowBox[{"right", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberRight", "[", 
      RowBox[{"left", "[", "n_", "]"}], "]"}], " ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberLeft", "[", "n_", "]"}], " ", ":=", " ", 
     RowBox[{"left", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberLeft", "[", 
      RowBox[{"right", "[", "n_", "]"}], "]"}], " ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"leftAndRightNumbers", "[", "n_List", "]"}], " ", ":=", " ", 
     RowBox[{"Join", "@@", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"moveNumberRight", "/@", "n"}], ",", 
        RowBox[{"moveNumberLeft", "/@", "n"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bareNumber", "[", 
      RowBox[{"left", "[", "n_", "]"}], "]"}], "  ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bareNumber", "[", 
      RowBox[{"right", "[", "n_", "]"}], "]"}], " ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bareNumber", "[", "n_", "]"}], " ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bareNumberQ", "[", "n_", "]"}], " ", ":=", " ", 
     RowBox[{"n", "===", 
      RowBox[{"bareNumber", "[", "n", "]"}]}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveDiskRight", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      "\[IndentingNewLine]", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "+", "1"}], ",", "z"}], "}"}], ",", "r"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveDiskLeft", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      "\[IndentingNewLine]", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "-", "1"}], ",", "z"}], "}"}], ",", "r"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberedDiskRight", "[", 
      RowBox[{"n_", "->", "d_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"moveNumberRight", "[", "n", "]"}], "->", 
      RowBox[{"moveDiskRight", "[", "d", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberedDiskLeft", "[", 
      RowBox[{"n_", "->", "d_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"moveNumberLeft", "[", "n", "]"}], "->", 
      RowBox[{"moveDiskLeft", "[", "d", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"getDisk", "[", "n_", "]"}], " ", ":=", " ", 
    RowBox[{"getDiskFromRun", "[", 
     RowBox[{"globalRun", ",", "n"}], "]"}]}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDiskFromRun", "[", 
      RowBox[{"run_", ",", "n_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"run", "[", "\"\<DiskData\>\"", "]"}], "[", "n", "]"}], "[", 
      "\"\<Disk\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDiskFromRun", "[", 
      RowBox[{"run_", ",", 
       RowBox[{"right", "[", "n_", "]"}]}], "]"}], " ", ":=", "  ", 
     RowBox[{"moveDiskRight", "[", 
      RowBox[{"getDiskFromRun", "[", 
       RowBox[{"run", ",", "n"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDiskFromRun", "[", 
      RowBox[{"run_", ",", 
       RowBox[{"left", "[", "n_", "]"}]}], "]"}], " ", ":=", " ", 
     RowBox[{"moveDiskLeft", "[", 
      RowBox[{"getDiskFromRun", "[", 
       RowBox[{"run", ",", "n"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDiskXZ", "[", 
      RowBox[{"run_", ",", "n_"}], "]"}], " ", ":=", " ", 
     RowBox[{"diskXZ", "[", 
      RowBox[{"getDiskFromRun", "[", 
       RowBox[{"run", ",", "n"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDiskXZ", "[", "n_", "]"}], " ", ":=", 
     RowBox[{"getDiskXZ", "[", 
      RowBox[{"globalRun", ",", "n"}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDiskZ", "[", 
      RowBox[{"run_", ",", "n_"}], "]"}], " ", ":=", " ", 
     RowBox[{"diskZ", "[", 
      RowBox[{"getDiskFromRun", "[", 
       RowBox[{"run", ",", "n"}], "]"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"getDiskZ", "[", "n_", "]"}], " ", ":=", 
     RowBox[{"getDiskZ", "[", 
      RowBox[{"globalRun", ",", "n"}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskIsLeft", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=", 
     RowBox[{"x", "<", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskIsRight", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=", 
     RowBox[{"x", ">", 
      RowBox[{"1", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskIsNormalised", "[", "d_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"!", " ", 
        RowBox[{"diskIsLeft", "[", "d", "]"}]}], ")"}], " ", "&&", " ", 
      RowBox[{"(", 
       RowBox[{"!", " ", 
        RowBox[{"diskIsRight", "[", "d", "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"disksMaximum", "[", "]"}], " ", ":=", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Max", "@", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"diskTopZ", "[", 
          RowBox[{"getDisk", "[", "#", "]"}], "]"}], "&"}], ",", 
        RowBox[{"Keys", "[", 
         RowBox[{"globalRun", "[", "\"\<DiskData\>\"", "]"}], "]"}]}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskHighestBottom", "[", "]"}], " ", ":=", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Max", "@", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"diskBottomZ", "[", 
          RowBox[{"getDisk", "[", "#", "]"}], "]"}], "&"}], ",", 
        RowBox[{"Keys", "[", 
         RowBox[{"globalRun", "[", "\"\<DiskData\>\"", "]"}], "]"}]}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"highestDiskZ", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Max", "@", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"diskZ", "[", 
          RowBox[{"getDiskFromRun", "[", 
           RowBox[{"run", ",", "#"}], "]"}], "]"}], "&"}], ",", 
        RowBox[{"Keys", "[", 
         RowBox[{"run", "[", "\"\<DiskData\>\"", "]"}], "]"}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "used", " ", "in", " ", "RunCoinStacking", " ", "as", " ", "well", " ", 
      "for", " ", "setup"}], ",", " ", 
     RowBox[{"so", " ", 
      RowBox[{"don", "'"}], "t", " ", "use", " ", "the", " ", "global"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nextRadius", "[", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "highestZ", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"highestZ", "=", 
         RowBox[{"highestDiskZ", "[", "globalRun", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
          "\"\<rFunction\>\"", "]"}], "[", "highestZ", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nextDiskNumber", "[", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"bareNumber", "/@", " ", 
        RowBox[{"VertexList", "[", 
         RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], "]"}]}], 
       "]"}], "+", "1"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[373]:=",ExpressionUUID->"c79fdebc-f9ae-4df7-a656-4383f6352b8d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["run set up", "Section",ExpressionUUID->"77a3141e-802f-42c1-8a57-5eddf8adc775"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "executeRun", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"executeRun", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "imax", ",", "res", ",", "diskTime"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Off", "[", 
         RowBox[{"SSSTriangle", "::", "tri"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"globalRun", "=", "run"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"globalRun", "[", "\"\<LastSupportDiskNumbers\>\"", "]"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"globalRun", "[", "\"\<LastSupportDiskNumbers\>\"", "]"}], 
           " ", "=", " ", 
           RowBox[{"VertexList", "[", 
            RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], 
            "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"globalRun", "[", "\"\<SupportDiskNumbers\>\"", "]"}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{"globalRun", "[", "\"\<SupportDiskNumbers\>\"", "]"}], "=", 
           RowBox[{"Association", "[", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"NumericQ", "[", "imax", "]"}]}], ",", 
          RowBox[{"imax", "=", "20000"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"monitorFunction", " ", ":=", " ", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "<=", " ", "imax"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"runCompletesArena", "[", "]"}], ",", 
              RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"diskTime", "=", " ", 
             RowBox[{"First", "@", 
              RowBox[{"Timing", "[", 
               RowBox[{"addNextDisk", "[", "]"}], "]"}]}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"monitorString", " ", ":=", " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "z", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"z", "=", 
             RowBox[{"diskHighestBottom", "[", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
             "StringTemplate", "[", 
              "\"\<next disk `disk`; Z `zToSwitch`,`zToMax`; r `radius`; \
per-disk time `timing`\>\"", "]"}], "[", 
             RowBox[{"<|", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"\"\<disk\>\"", "->", " ", 
                RowBox[{"nextDiskNumber", "[", "]"}]}], "\[IndentingNewLine]",
                ",", 
               RowBox[{"\"\<zToSwitch\>\"", "->", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"run", "[", "\"\<Arena\>\"", "]"}], "[", 
                  "\"\<rSwitchAt\>\"", "]"}], "-", "z"}]}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"\"\<zToMax\>\"", "->", 
                RowBox[{
                 RowBox[{
                  RowBox[{"run", "[", "\"\<Arena\>\"", "]"}], "[", 
                  "\"\<zMax\>\"", "]"}], "-", "z"}]}], "\[IndentingNewLine]", 
               ",", 
               RowBox[{"\"\<radius\>\"", "->", 
                RowBox[{"diskR", "[", 
                 RowBox[{
                  RowBox[{"Last", "[", 
                   RowBox[{"globalRun", "[", "\"\<DiskData\>\"", "]"}], "]"}],
                   "[", "\"\<Disk\>\"", "]"}], "]"}]}], "\[IndentingNewLine]",
                ",", 
               RowBox[{"\"\<timing\>\"", "->", "diskTime"}]}], 
              "\[IndentingNewLine]", "|>"}], "]"}]}]}], "\[IndentingNewLine]",
           "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"False", ",", "monitorFunction", ",", 
          RowBox[{"Monitor", "[", 
           RowBox[{"monitorFunction", ",", "monitorString"}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"result", "=", " ", 
         RowBox[{"postRun", "[", "globalRun", "]"}]}], ";", 
        "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[409]:=",ExpressionUUID->"15e75fbe-967c-44f1-86aa-fa34b59eca50"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"runCompletesArena", "[", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "cutoff", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"diskHighestBottom", "[", "]"}], ">", 
         RowBox[{
          RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
          "\"\<zMax\>\"", "]"}]}], " ", "||", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Keys", "[", 
           RowBox[{"globalRun", "[", "\"\<DiskData\>\"", "]"}], "]"}], "]"}], 
         ">", " ", 
         RowBox[{
          RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
          "\"\<diskMax\>\"", "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[411]:=",ExpressionUUID->"6dbf7845-f16b-4a34-8ebf-111941a4cda1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["addNextDisk", "Section",ExpressionUUID->"fe596e68-0dda-4801-93e2-f79621326472"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"diskListRowFromDisk", "[", 
      RowBox[{"node_", ",", "disk_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"node", "->", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<DiskNumber\>\"", "->", "node"}], ",", 
          RowBox[{"\"\<Disk\>\"", "->", "disk"}]}], "|>"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"addNextDisk", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nextR", ",", "row", ",", "n", ",", "timing", ",", "disk"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nextR", "=", 
         RowBox[{"nextRadius", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"row", "=", 
         RowBox[{"newFindNextDiskFromSupportSet", "[", "nextR", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"disk", " ", "=", " ", 
         RowBox[{"row", "[", "\"\<NextDisk\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"disk", "=", " ", 
         RowBox[{"jiggleDisk", "[", 
          RowBox[{"globalRun", ",", "disk"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"n", "=", 
         RowBox[{"nextDiskNumber", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"updateContactGraph", "[", 
         RowBox[{"n", ",", 
          RowBox[{"row", "[", "\"\<NextDiskRestsOn\>\"", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"globalRun", "[", "\"\<DiskData\>\"", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"diskListRowFromDisk", "[", 
           RowBox[{"n", ",", "disk"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"globalRun", "[", "\"\<LastSupportDiskNumbers\>\"", "]"}], 
         "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"globalRun", "[", "\"\<LastSupportDiskNumbers\>\"", "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"leftRightCouldSupport", "[", 
            RowBox[{"n", ",", 
             RowBox[{"nextRadius", "[", "]"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"globalRun", "[", "\"\<SupportDiskNumbers\>\"", "]"}], ",", 
          RowBox[{"n", "->", 
           RowBox[{
           "globalRun", "[", "\"\<LastSupportDiskNumbers\>\"", "]"}]}]}], 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"monitorRise", "=", 
         RowBox[{
          RowBox[{"disksMaximum", "[", "]"}], "-", "monitorZ"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"monitorZ", "=", " ", 
         RowBox[{"diskHighestBottom", "[", "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"jiggleDisk", "[", 
      RowBox[{"run_", ",", "disk_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"res", ",", "noise"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", "disk"}], ";", "\[IndentingNewLine]", 
        RowBox[{"noise", "=", 
         RowBox[{
          RowBox[{"run", "[", "\"\<Arena\>\"", "]"}], "[", "\"\<Noise\>\"", 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", "noise", "]"}], ",", 
          RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"jiggleDiskRadius", "[", 
          RowBox[{"res", ",", "noise"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jiggleDiskRadius", "[", 
     RowBox[{
      RowBox[{"Disk", "[", 
       RowBox[{"xy_", ",", "r_"}], "]"}], ",", "noise_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"Disk", "[", 
     RowBox[{"xy", ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"r", "*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", "noise"}], ",", 
          RowBox[{"1", "+", "noise"}]}], "}"}]}], "]"}]}], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[412]:=",ExpressionUUID->"a4b33fd4-cfad-47f7-b4b8-c7dc11ced13c"],

Cell[CellGroupData[{

Cell["findNextDiskFromSupportSet", "Subsection",ExpressionUUID->"fb7ad483-325c-48f9-903f-4c82bbc04077"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"newFindNextDiskFromSupportSet", "[", "nextR_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newSupportTable", ",", "res"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newSupportTable", "=", 
        RowBox[{"newsupportPairs", "[", "nextR", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"newSupportTable", "=", " ", 
        RowBox[{"SortBy", "[", 
         RowBox[{"newSupportTable", ",", 
          RowBox[{
           RowBox[{"diskZ", "[", "#NextDisk", "]"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "newSupportTable", "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<No valid supports looking for \>\"", ",", " ", 
            RowBox[{"nextDiskNumber", "[", "]"}]}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"res", "=", 
        RowBox[{"First", "[", "newSupportTable", "]"}]}], ";", 
       "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[416]:=",ExpressionUUID->"a04cc5cb-f6d3-44cb-948c-5de7b31d7bb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["topChain", "Subsection",ExpressionUUID->"32ddfbab-160a-4ef8-9688-21a17a7fd521"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"vectorXZ", "[", 
      RowBox[{"run_", ",", 
       RowBox[{
        RowBox[{"n1_", "\[DirectedEdge]", "n2_"}], " ", "|", " ", 
        RowBox[{"n1_", "\[UndirectedEdge]", " ", "n2_"}], " ", "|", " ", 
        RowBox[{"{", 
         RowBox[{"n1_", ",", "n2_"}], "}"}]}]}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{
        RowBox[{"getDiskXZ", "[", 
         RowBox[{"run", ",", "n2"}], "]"}], "-", 
        RowBox[{"getDiskXZ", "[", 
         RowBox[{"run", ",", "n1"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "neighbours", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"neighbours", "[", 
     RowBox[{"g_", ",", "n_"}], "]"}], " ", ":=", "  ", 
    RowBox[{"Complement", "[", 
     RowBox[{
      RowBox[{"VertexList", "[", 
       RowBox[{"Graph", "[", 
        RowBox[{"EdgeList", "[", 
         RowBox[{"g", ",", 
          RowBox[{"n", "\[UndirectedEdge]", "_"}]}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", "n", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vectorsFromNode", "[", 
      RowBox[{"run_", ",", "g_", ",", "n_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "nbrs", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nbrs", " ", ":=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Map", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"n", "\[DirectedEdge]", " ", "#"}], " ", "&"}], " ", 
             ",", " ", 
             RowBox[{"neighbours", "[", 
              RowBox[{"g", ",", "n"}], "]"}]}], "]"}], ",", 
           RowBox[{"Map", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"left", "[", "n", "]"}], "\[DirectedEdge]", " ", "#"}],
               " ", "&"}], " ", ",", " ", 
             RowBox[{"neighbours", "[", 
              RowBox[{"g", ",", 
               RowBox[{"left", "[", "n", "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Association", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", 
             RowBox[{"vectorXZ", "[", 
              RowBox[{"run", ",", "#"}], "]"}]}], "&"}], ",", "nbrs"}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"clockwiseSortFunction", "[", "xy_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], "=", 
         RowBox[{"xy", "/", 
          RowBox[{"Norm", "[", "xy", "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"-", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"x", ">", "0"}], ",", 
           RowBox[{"1", "+", "y"}], ",", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"1", "+", "y"}], ")"}]}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"sorts", " ", "in", " ", "clockwise", " ", "order"}], " ", "*)"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"mostClockwiseEdgeFromNode", "[", 
      RowBox[{"run_", ",", "g_", ",", "n_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "vectors", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vectors", " ", "=", " ", 
         RowBox[{"vectorsFromNode", "[", 
          RowBox[{"run", ",", "g", ",", "n"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "vectors", "]"}], "==", "0"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"Missing", "[", "]"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"vectors", " ", "=", " ", 
         RowBox[{"SortBy", "[", 
          RowBox[{"vectors", ",", "clockwiseSortFunction"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"First", "[", 
         RowBox[{"Keys", "[", "vectors", "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"topChain", "[", "graph_", "]"}], " ", ":=", " ", 
     RowBox[{"topChainInRun", "[", 
      RowBox[{"globalRun", ",", "graph"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"topChainInRun", "[", 
      RowBox[{"run_", ",", "graph_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "g", ",", "chain", ",", "neighbours", ",", "highestNode", ",", 
         "lastNode", ",", "nextNode", ",", "from", ",", "nextEdge", ",", 
         RowBox[{"chainMax", "=", "500"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "=", "graph"}], ";", "\[IndentingNewLine]", 
        RowBox[{"highestNode", "=", 
         RowBox[{"Last", "[", 
          RowBox[{"SortBy", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"VertexList", "[", "g", "]"}], ",", "bareNumberQ"}], 
             "]"}], ",", 
            RowBox[{
             RowBox[{"getDiskZ", "[", 
              RowBox[{"run", ",", "#"}], "]"}], "&"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nbrs", "[", "n_", "]"}], " ", ":=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Map", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"n", "\[DirectedEdge]", " ", "#"}], " ", "&"}], " ", 
             ",", " ", 
             RowBox[{"neighbours", "[", 
              RowBox[{"g", ",", "n"}], "]"}]}], "]"}], ",", 
           RowBox[{"Map", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"left", "[", "n", "]"}], "\[DirectedEdge]", " ", "#"}],
               " ", "&"}], " ", ",", " ", 
             RowBox[{"neighbours", "[", 
              RowBox[{"g", ",", 
               RowBox[{"left", "[", "n", "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"chain", "=", " ", 
         RowBox[{"{", "highestNode", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"debug", "=", 
         RowBox[{"highestNode", "==", "59"}]}], ";", 
        RowBox[{"debug", "=", "False"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", "chainMax"}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"lastNode", "=", 
             RowBox[{"Last", "[", "chain", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"nextEdge", " ", "=", 
             RowBox[{"mostClockwiseEdgeFromNode", "[", 
              RowBox[{"run", ",", "g", ",", "lastNode"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"debug", ",", 
              RowBox[{"Print", "[", 
               RowBox[{"chain", ",", "nextEdge", ",", 
                RowBox[{"prettyGraph", "[", 
                 RowBox[{"globalRun", ",", "g"}], "]"}]}], "]"}]}], "]"}], 
            ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MissingQ", "[", "nextEdge", "]"}], ",", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "may", " ", "only", " ", "happen", " ", "for", " ", "1", " ", 
                RowBox[{"left", "[", "1", "]"}], " ", "megabodge"}], " ", 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"from", ",", "nextNode"}], "}"}], "=", 
             RowBox[{"List", "@@", "nextEdge"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MatchQ", "[", 
               RowBox[{"from", ",", 
                RowBox[{"left", "[", "_", "]"}]}], "]"}], ",", 
              RowBox[{"chain", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"chain", ",", "from"}], "]"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"chain", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"chain", ",", "nextNode"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"EdgeDelete", "[", 
              RowBox[{"g", ",", 
               RowBox[{"from", "\[UndirectedEdge]", "nextNode"}]}], "]"}]}], 
            ";"}], " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "could", " ", "move", " ", "up", " ", "into", " ", "backwards", 
             " ", "branch"}], " ", "*)"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MatchQ", "[", 
              RowBox[{
               RowBox[{"Last", "[", "chain", "]"}], ",", 
               RowBox[{"right", "[", "_", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"chain", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"chain", ",", 
                RowBox[{"moveNumberLeft", "[", 
                 RowBox[{"Last", "[", "chain", "]"}], "]"}]}], "]"}]}]}], 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "chain", "]"}], "==", 
              RowBox[{"First", "[", "chain", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Break", "[", "]"}], ";"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "==", "chainMax"}], ",", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<i10\>\"", "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]",
         "chain"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[476]:=",ExpressionUUID->"23e63cff-41ae-4da1-ab93-1eb2e9df7891"],

Cell[BoxData[""], "Input",
 CellLabel->
  "In[237]:=",ExpressionUUID->"0f484384-5889-4ff3-88d7-8f8c1cc21f5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["supportPairsFromTopChain", "Subsection",ExpressionUUID->"900f452c-4418-404f-9471-5d58f41943c7"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"newsupportPairs", "[", "nextR_", "]"}], " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"supportGraph", ",", "supportChain"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"supportGraph", "=", "  ", 
         RowBox[{"Subgraph", "[", 
          RowBox[{
           RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], ",", 
           RowBox[{
           "globalRun", "[", "\"\<LastSupportDiskNumbers\>\"", "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"supportChain", " ", "=", " ", 
         RowBox[{"topChain", "[", "supportGraph", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"globalRun", "[", "\"\<LastSupportDiskNumbers\>\"", "]"}], 
         "=", 
         RowBox[{"disksInSupportChain", "[", 
          RowBox[{"supportChain", ",", "nextR"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"newSupportPairsFromSupportDisks", "[", 
          RowBox[{
           RowBox[{"globalRun", "[", "\"\<LastSupportDiskNumbers\>\"", "]"}], 
           ",", "nextR"}], "]"}]}], ";", "\[IndentingNewLine]", "res"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"disksInSupportChain", "[", 
      RowBox[{"chain_", ",", "nextR_"}], "]"}], " ", ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"addLeftRightSupporters", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", "chain", "]"}], ",", "nextR"}], 
      "]"}]}], ";"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"addLeftRightSupporters", "[", 
      RowBox[{"sDisks_", ",", "nextR_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"supportDisks", "=", "sDisks"}], ";", "\[IndentingNewLine]", 
        RowBox[{"supportDisks", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"bareNumber", "/@", " ", "supportDisks"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"supportDisks", " ", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"leftRightCouldSupport", "[", 
              RowBox[{"#", ",", "nextR"}], "]"}], "&"}], ",", 
            "supportDisks"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "supportDisks"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"leftRightCouldSupport", "[", 
      RowBox[{"node_", ",", "nextR_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"d", ",", "xy", ",", "res", ",", "nodeRadius"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", " ", 
         RowBox[{"{", "node", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"getDisk", "[", "node", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"xy", "=", 
         RowBox[{"diskXZ", "[", "d", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nodeRadius", "=", 
         RowBox[{"diskR", "[", "d", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"xy", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], " ", ">=", 
           RowBox[{
            RowBox[{"-", "0.5"}], "-", "  ", 
            RowBox[{"(", 
             RowBox[{"nextR", "+", "nodeRadius"}], ")"}]}]}], ",", 
          RowBox[{"res", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"res", ",", 
             RowBox[{"left", "[", "node", "]"}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"xy", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], " ", "<=", "   ", 
           RowBox[{"0.5", "+", "  ", 
            RowBox[{"(", 
             RowBox[{"nextR", "+", "nodeRadius"}], ")"}]}]}], ",", 
          RowBox[{"res", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"res", ",", 
             RowBox[{"right", "[", "node", "]"}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", "res"}]}], " ", "\[IndentingNewLine]", "]"}]}],
     ";"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[425]:=",ExpressionUUID->"02fccc85-fef0-4c13-84c1-f73552faeba6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"newSupportPairsFromSupportDisks", "[", 
     RowBox[{"supportDisks_", ",", "nextR_"}], "]"}], " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "pairs", ",", "supportTable", ",", "extendedDisks", ",", "res", ",", 
        "i", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pairs", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"supportDisks", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"supportDisks", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "supportDisks", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"Length", "[", "supportDisks", "]"}]}], "}"}]}], "]"}], 
          ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"newSupportDisks", "=", "supportDisks"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"newSupportDisks", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "->", 
            RowBox[{"getDiskFromRun", "[", 
             RowBox[{"globalRun", ",", "#"}], "]"}]}], "&"}], ",", 
          "newSupportDisks"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"newPairs", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"newSupportDisks", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"newSupportDisks", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "newSupportDisks", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"Length", "[", "newSupportDisks", "]"}]}], "}"}]}], 
           "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"newSupportTable", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"newMakeSupportTableRow", "[", "#", "]"}], "&"}], ",", 
          "newPairs"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"newSupportTable", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"newSupportTable", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "#GapSeparation", "]"}], "<", " ", 
            RowBox[{"2", "*", " ", "nextR"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"newSupportTable", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", 
             RowBox[{"\"\<NextDisk\>\"", "->", 
              RowBox[{"newDiskOnThisPair", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#Disk1", ",", "#Disk2"}], "}"}], ",", "nextR"}], 
               "]"}]}]}], "]"}], "&"}], ",", "newSupportTable"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"monitornewSupportTable", " ", "=", " ", "newSupportTable"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"newSupportTable", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"newSupportTable", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MissingQ", "[", "#NextDisk", "]"}]}], "&"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"newSupportTable", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"newSupportTable", ",", "isLeftRightSupported"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"newSupportTable", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"newSupportTable", ",", 
          RowBox[{
           RowBox[{"diskIsNormalised", "[", "#NextDisk", "]"}], "&"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"newdisksToCheckIntersection", "=", 
        RowBox[{"Association", "[", "newSupportDisks", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "the", " ", "centre", " ", "of", " ", "the", " ", "new", " ", "disk", 
         " ", "must", " ", "be", " ", "above", " ", "the", " ", "line", " ", 
         "trhrough", " ", "the", " ", "centres", " ", "of", " ", "the", " ", 
         "support"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"supportLine", " ", "=", "  ", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"Values", "@", 
           RowBox[{"Map", "[", 
            RowBox[{"diskXZ", ",", "newdisksToCheckIntersection"}], "]"}]}], 
          ",", "First"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"supportLineFunction", " ", "=", " ", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"supportLine", ",", 
          RowBox[{"InterpolationOrder", "->", "1"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"diskAboveSupportLineQ", "[", "disk_", "]"}], ":=", " ", 
        RowBox[{
         RowBox[{"diskZ", "[", "disk", "]"}], " ", ">", " ", 
         RowBox[{"supportLineFunction", "[", 
          RowBox[{"diskX", "[", "disk", "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"newSupportTable", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"newSupportTable", ",", 
          RowBox[{
           RowBox[{"diskAboveSupportLineQ", "[", "#NextDisk", "]"}], "&"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"newSupportTable", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"newsupportTableFindIntersections", "[", 
            RowBox[{"#", ",", "nextR", ",", "newdisksToCheckIntersection"}], 
            "]"}], "&"}], ",", "newSupportTable"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"newSupportTable", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"newSupportTable", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#Intersection", "]"}], "==", "0"}], 
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "newSupportTable"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"isLeftRightSupported", "[", "row_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1", ",", "x2", ",", "xDisk", ",", "z1", ",", "z2", ",", "zDisk"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x1", "=", 
        RowBox[{"diskX", "[", 
         RowBox[{"row", "[", "\"\<Disk1\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x2", " ", "=", " ", 
        RowBox[{"diskX", "[", 
         RowBox[{"row", "[", "\"\<Disk2\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"xDisk", " ", "=", " ", 
        RowBox[{"diskX", "[", 
         RowBox[{"row", "[", "\"\<NextDisk\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"z1", "=", 
        RowBox[{"diskZ", "[", 
         RowBox[{"row", "[", "\"\<Disk1\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"z2", " ", "=", " ", 
        RowBox[{"diskZ", "[", 
         RowBox[{"row", "[", "\"\<Disk2\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"zDisk", " ", "=", " ", 
        RowBox[{"diskZ", "[", 
         RowBox[{"row", "[", "\"\<NextDisk\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"IntervalMemberQ", "[", 
         RowBox[{
          RowBox[{"Interval", "[", 
           RowBox[{"{", 
            RowBox[{"x1", ",", "x2"}], "}"}], "]"}], ",", "xDisk"}], "]"}], 
        " ", "&&", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"zDisk", " ", ">", " ", "z1"}], " ", "||", " ", 
          RowBox[{"zDisk", " ", ">", " ", "z2"}]}], ")"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newMakeSupportTableRow", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"node1_", "->", "d1_"}], ",", 
      RowBox[{"node2_", "->", "d2_"}]}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", "hDiff", ",", "eSep"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hDiff", "=", " ", 
       RowBox[{
        RowBox[{"diskX", "[", "d2", "]"}], "-", 
        RowBox[{"diskX", "[", "d1", "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"hDiff", ">", " ", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"eSep", "=", " ", 
         RowBox[{
          RowBox[{"diskLeftX", "[", "d2", "]"}], "-", 
          RowBox[{"diskRightX", "[", "d1", "]"}]}]}], " ", 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"eSep", " ", "=", " ", 
         RowBox[{
          RowBox[{"diskLeftX", "[", "d1", "]"}], "-", 
          RowBox[{"diskRightX", "[", "d2", "]"}]}]}]}], " ", 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"eSep", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"eSep", ">", "0"}], ",", "eSep", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Disk1\>\"", "->", "d1"}], ",", 
        RowBox[{"\"\<Disk2\>\"", "->", "d2"}], ",", 
        RowBox[{"\"\<NextDiskRestsOn\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"node1", ",", "node2"}], "}"}]}], ",", " ", 
        RowBox[{"\"\<GapSeparation\>\"", "->", "eSep"}]}], "|>"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"newsupportTableFindIntersections", "[", 
     RowBox[{"row_", ",", "nextR_", ",", "disks_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "res", ",", "extendedDisks", ",", "locationIntersectsQ", ",", 
        "intersections"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"intersections", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diskdiskIntersectionQ", "[", 
            RowBox[{
             RowBox[{"row", "[", "\"\<NextDisk\>\"", "]"}], ",", "#"}], "]"}],
            "&"}], ",", 
          RowBox[{"KeyDrop", "[", 
           RowBox[{"disks", ",", 
            RowBox[{"row", "[", "\"\<NextDiskRestsOn\>\"", "]"}]}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"intersections", "=", " ", 
        RowBox[{"Keys", "@", 
         RowBox[{"Select", "[", " ", 
          RowBox[{"intersections", ",", "TrueQ"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Append", "[", 
        RowBox[{"row", ",", 
         RowBox[{"\"\<Intersection\>\"", "->", "intersections"}]}], "]"}]}]}],
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"newDiskOnThisPair", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d1_", ",", "d2_"}], "}"}], ",", "r_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"diskdiskUpperTouchingPoint", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"d1", ",", "d2"}], "}"}], ",", "r"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MissingQ", "[", "res", "]"}], ",", 
         RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"no", " ", "overlap"}], " ", "*)"}], " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{"res", ",", "r"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"diskdiskIntersectionQ", "[", 
     RowBox[{
      RowBox[{"Disk", "[", 
       RowBox[{"xy1_", ",", "r1_"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{"xy2_", ",", "r2_"}], "]"}]}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"xy1", "-", "xy2"}], ",", "2"}], "]"}], " ", "<", " ", 
     RowBox[{"(", 
      RowBox[{"r1", "+", " ", "r2"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[429]:=",ExpressionUUID->"8f35855e-730d-494f-9510-0e9747f37f82"]
}, Open  ]],

Cell[CellGroupData[{

Cell["updateContactGraph", "Subsection",ExpressionUUID->"1010e017-b941-42de-9bd2-be5b0763ab01"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"updateContactGraph", "[", 
    RowBox[{"n_", ",", "disk_", ",", 
     RowBox[{"{", 
      RowBox[{"n1_", ",", "n2_"}], "}"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"updateContactGraph", "[", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"n1", ",", "n2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"updateContactGraph", "[", 
     RowBox[{"n_", ",", 
      RowBox[{"{", 
       RowBox[{"n1_", ",", "n2_"}], "}"}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"g", ",", "d", ",", "d1", ",", "d2", ",", "d1Left"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", " ", "=", " ", 
        RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"g", "=", "  ", 
        RowBox[{"VertexAdd", "[", 
         RowBox[{"g", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"bareNumberQ", "[", "n1", "]"}]}], ",", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"g", "=", " ", 
          RowBox[{"VertexAdd", "[", 
           RowBox[{"g", ",", "n1"}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"bareNumberQ", "[", "n2", "]"}]}], ",", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"g", "=", " ", 
          RowBox[{"VertexAdd", "[", 
           RowBox[{"g", ",", "n2"}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"g", "=", " ", 
        RowBox[{"EdgeAdd", "[", 
         RowBox[{"g", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", " ", "\[UndirectedEdge]", " ", "n1"}], ",", 
            RowBox[{"n", " ", "\[UndirectedEdge]", " ", "n2"}]}], " ", 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], "=", "g"}], 
       ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[435]:=",ExpressionUUID->"7b6e07ad-c2cf-4ede-864a-e066b48066f4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Disk calculations", "Section",ExpressionUUID->"bff67e66-cad0-497c-adf1-b1d32240d7a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"diskdiskUpperTouchingPoint", "[", 
      RowBox[{"pairDisks_", ",", "r_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "lrPoints", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lrPoints", "=", " ", 
         RowBox[{"newdiskdiskTouchingPoint", "[", 
          RowBox[{"pairDisks", ",", "r"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", "lrPoints", "]"}], ",", 
          RowBox[{"Return", "[", "lrPoints", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Last", "[", 
         RowBox[{"SortBy", "[", 
          RowBox[{"lrPoints", ",", 
           RowBox[{
            RowBox[{"N", "@", 
             RowBox[{"Last", "[", "#", "]"}]}], "&"}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[437]:=",ExpressionUUID->"f84550c7-7952-4387-a527-80b00981d42e"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"newdiskdiskTouchingPoint", "[", 
     RowBox[{"diskPair_", ",", "r_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c1", ",", "c2", ",", "r1", ",", "r2", ",", "interdisk", ",", 
        "interdiskVectorNorm", ",", "interdiskNormal", ",", 
        "\[IndentingNewLine]", "angle", ",", "vector", ",", "normal", ",", 
        "interdiskVector"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"c1", ",", "c2"}], "}"}], "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"diskXZ", ",", "diskPair"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r1", ",", "r2"}], "}"}], "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"diskR", ",", "diskPair"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"interdiskVector", " ", "=", " ", 
        RowBox[{"c2", "-", "c1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"interdisk", " ", "=", " ", 
        RowBox[{"Norm", "[", "interdiskVector", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"interdiskVectorNorm", " ", "=", " ", 
        RowBox[{"interdiskVector", "/", 
         RowBox[{"Norm", "[", "interdiskVector", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"interdiskNormal", " ", "=", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"interdiskVectorNorm", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"interdiskVectorNorm", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"angle", " ", "=", " ", 
        RowBox[{"sssTriangleInteriorAngle", "[", 
         RowBox[{
          RowBox[{"r2", "+", "r"}], ",", 
          RowBox[{"r", "+", "r1"}], ",", "interdisk"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MissingQ", "[", "angle", "]"}], ",", 
         RowBox[{"Return", "[", "angle", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vector", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r1", "+", "r"}], ")"}], "*", 
         RowBox[{"Cos", "[", "angle", "]"}], "*", "interdiskVectorNorm"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"normal", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r1", "+", "r"}], ")"}], "*", 
         RowBox[{"Sin", "[", "angle", "]"}], "*", " ", "interdiskNormal"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c1", "+", "vector", "+", "normal"}], ",", 
         RowBox[{"c1", "+", "vector", "-", "normal"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sssTriangleInteriorAngle", "[", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tri", ",", "angle"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tri", " ", "=", 
         RowBox[{"SSSTriangle", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "tri", "]"}], "==", "SSSTriangle"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"Missing", "[", "\"\<Not a triangle\>\"", "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"angle", " ", "=", " ", 
         RowBox[{"TriangleMeasurement", "[", 
          RowBox[{"tri", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<InteriorAngle\>\"", ",", "1"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", "angle"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[438]:=",ExpressionUUID->"852c2853-bfd6-4866-bf92-ccc59ded20a4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Post run prettification", "Section",ExpressionUUID->"2e49cea5-0ab8-4bd6-953e-36c8829dd9b4"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"postRun", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"res", ",", "chains", ",", "nrchains"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"pretty", "[", "run", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"edgeCheck", "[", "res", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"res", "=", " ", 
         RowBox[{"postRunNodeStatistics", "[", "res", "]"}]}], ";", 
        "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"prettyGraph", "[", 
      RowBox[{"run_", ",", "gp_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", ",", "setGraphXY", ",", "res", ",", "vc", ",", "es"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "=", "gp"}], ";", "\[IndentingNewLine]", 
        RowBox[{"vc", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"getDiskXZ", "[", 
             RowBox[{"run", ",", "#"}], "]"}], "&"}], ",", 
           RowBox[{"VertexList", "[", "g", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", " ", "=", " ", 
         RowBox[{"Graph", "[", 
          RowBox[{"g", ",", 
           RowBox[{"VertexCoordinates", "->", "vc"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"es", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", 
             RowBox[{"edgeStyle", "[", 
              RowBox[{"run", ",", "#"}], "]"}]}], "&"}], ",", 
           RowBox[{"EdgeList", "[", "g", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", "=", " ", 
         RowBox[{"Graph", "[", 
          RowBox[{"g", ",", 
           RowBox[{"EdgeStyle", "->", "es"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"g", ",", 
           RowBox[{"VertexLabels", "->", "\"\<Name\>\""}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"g", ",", 
           RowBox[{"VertexSize", "->", "Tiny"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "g"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pretty", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", ",", "setGraphXY", ",", "res", ",", "vc", ",", "es"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "=", 
         RowBox[{"prettyGraph", "[", 
          RowBox[{"run", ",", 
           RowBox[{"run", "[", "\"\<ContactGraph\>\"", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", "=", "run"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", "[", "\"\<ContactGraph\>\"", "]"}], "=", "g"}], ";", 
        "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"edgeStyle", "[", 
     RowBox[{"run_", ",", 
      RowBox[{"upper_", " ", "\[UndirectedEdge]", " ", "lower_"}]}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "vxy", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vxy", "=", 
        RowBox[{"vectorXZ", "[", 
         RowBox[{"run", ",", 
          RowBox[{"upper", "\[UndirectedEdge]", " ", "lower"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "vxy", "]"}], ">=", " ", "0"}], ",", "Blue", 
         ",", "Red"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"edgeStyle", "[", 
      RowBox[{"upper_", " ", "\[DirectedEdge]", " ", "lower_"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"edgeStyle", "[", 
      RowBox[{"upper", " ", "\[UndirectedEdge]", " ", "lower"}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[440]:=",ExpressionUUID->"8585f538-fa91-4aed-9d43-3a8cd615890c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"edgeCheck", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "g", ",", "res", ",", "edgeStyler", ",", "res2", ",", "nodesToCheck", 
         ",", "lopsidedAllowedTo"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "=", 
         RowBox[{"run", "[", "\"\<ContactGraph\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"lowerEdges", "[", 
             RowBox[{"g", ",", "#"}], "]"}], "&"}], ",", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"VertexList", "[", "g", "]"}], ",", "bareNumberQ"}], 
              "]"}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Or", "@@", " ", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "!=", "2"}], "&"}], ",", 
             "res"}], "]"}]}], ",", 
          "\"\<Print some nodes without two supports\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"edgeStyler", "[", "edgeList_", "]"}], " ", ":=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{"edgeStyle", ",", "edgeList"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"lopsidedAllowedTo", " ", "=", " ", "100"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"nodesToCheck", " ", "=", " ", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"VertexList", "[", "g", "]"}], ",", "bareNumberQ"}], 
            "]"}], ",", 
           RowBox[{"Range", "[", "lopsidedAllowedTo", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res2", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"lowerEdges", "[", 
             RowBox[{"g", ",", "#"}], "]"}], "&"}], ",", "nodesToCheck"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"res2", " ", "=", 
         RowBox[{"Association", "@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "->", 
              RowBox[{"Sort", "@", 
               RowBox[{"edgeStyler", "[", "#", "]"}]}]}], "&"}], ",", 
            "res2"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"res2", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{"res2", ",", 
           RowBox[{
            RowBox[{"#", " ", "!=", " ", 
             RowBox[{"{", 
              RowBox[{
               TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
                "RGBColorSwatchTemplate"], ",", 
               TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
                "RGBColorSwatchTemplate"]}], "}"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "res2", "]"}], ">", "0"}], " ", "&&", "  ", 
           RowBox[{
            RowBox[{"Keys", "[", "res2", "]"}], "!=", 
            RowBox[{"{", 
             RowBox[{"{", "}"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Print  lopsided nodes\>\"", ",", " ", "res2"}], 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"edgeCheckNode", "[", "n_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", ",", "res", ",", "edgeStyler", ",", "res2"}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"bareNumber", "[", "n", "]"}], "===", "1"}], ",", 
          RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", "=", 
         RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"le", " ", "=", " ", 
         RowBox[{"lowerEdges", "[", 
          RowBox[{"g", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "le", "]"}], "!=", "2"}], ",", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Node \>\"", ",", " ", "n", ",", " ", 
            "\"\< without two supports\>\""}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{"Map", "[", 
             RowBox[{"edgeStyle", ",", 
              RowBox[{"Keys", "[", "le", "]"}]}], "]"}], "]"}], "!=", " ", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
              "RGBColorSwatchTemplate"], ",", 
             TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
              "RGBColorSwatchTemplate"]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Node \>\"", ",", " ", "n", ",", " ", "\"\< is lopsided\>\""}],
            "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"lowerEdges", "[", 
      RowBox[{"g_", ",", "n_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nxy", ",", "edges", ",", "nodes"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nxy", "=", 
         RowBox[{"AnnotationValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"g", ",", "n"}], "}"}], ",", "VertexCoordinates"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"edges", "=", " ", 
         RowBox[{"EdgeList", "[", 
          RowBox[{"g", ",", 
           RowBox[{"n", " ", "\[UndirectedEdge]", "_"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nodes", "=", " ", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"List", "@@@", "edges"}], "]"}], ",", 
           RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nodes", "=", " ", 
         RowBox[{"Association", "@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"n", " ", "\[DirectedEdge]", " ", "#"}], ")"}], "->", 
              " ", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"AnnotationValue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"g", ",", "#"}], "}"}], ",", "VertexCoordinates"}],
                  "]"}], "]"}], "-", 
               RowBox[{"Last", "[", "nxy", "]"}]}]}], "&"}], ",", "nodes"}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nodes", " ", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{"nodes", ",", 
           RowBox[{
            RowBox[{"#", "<=", "0"}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Keys", "[", "nodes", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[445]:=",ExpressionUUID->"cf4fbca8-16e4-41a8-ab10-c6e82f834d1a"],

Cell[BoxData[""], "Input",
 CellLabel->
  "In[260]:=",ExpressionUUID->"aeb4abcf-f428-4e6b-aa1b-c97580f5ddc0"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"reColour", "[", "run_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"g", ",", "chains", ",", "v", ",", "e"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"chains", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"#Chain", "&"}], ",", 
          RowBox[{"run", "[", "\"\<Chains\>\"", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vList", "[", "gr_", "]"}], " ", ":=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "->", 
            RowBox[{"AnnotationValue", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"gr", ",", "#"}], "}"}], ",", "VertexCoordinates"}], 
             "]"}]}], "&"}], ",", 
          RowBox[{"VertexList", "[", "gr", "]"}]}], "]"}]}], ";", 
       RowBox[{"v", "=", 
        RowBox[{"vList", "[", 
         RowBox[{"run", "[", "\"\<ContactGraph\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"eList", "[", "gr_", "]"}], " ", ":=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "->", 
            RowBox[{"AnnotationValue", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"gr", ",", "#"}], "}"}], ",", "EdgeStyle"}], "]"}]}], 
           "&"}], ",", 
          RowBox[{"EdgeList", "[", "gr", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"chainEdges", "=", 
        RowBox[{"Association", "@", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Map", "[", 
           RowBox[{"eList", ",", 
            RowBox[{"Values", "@", "chains"}]}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"grayChains", "=", " ", 
        RowBox[{"Association", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", "Gray"}], "&"}], ",", 
           RowBox[{"EdgeList", "[", 
            RowBox[{"run", "[", "\"\<ContactGraph\>\"", "]"}], "]"}]}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"chainEdges", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"grayChains", ",", "chainEdges"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "v", "]"}], ",", 
         RowBox[{"Keys", "[", "chainEdges", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"VertexCoordinates", "->", 
          RowBox[{"Values", "[", "v", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"EdgeStyle", "->", 
          RowBox[{"KeyValueMap", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "->", "#2"}], "&"}], ",", "chainEdges"}], 
           "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "*)"}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[448]:=",ExpressionUUID->"47af14ed-82ad-48bd-b9e6-a0a83892fbeb"],

Cell[BoxData[""], "Input",
 CellLabel->
  "In[262]:=",ExpressionUUID->"b11ffafd-c36c-44c8-8904-03c4b025b92a"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellLabel->
  "In[263]:=",ExpressionUUID->"2e1ac415-52b8-4cb3-bb7f-78f20931c1fb"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"edgeDirectedRightwards", "[", 
      RowBox[{"g_", ",", 
       RowBox[{"v1_", " ", "\[UndirectedEdge]", " ", "v2_"}]}], "]"}], " ", ":=",
      " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1xy", ",", "v2xy"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"v1xy", "=", 
         RowBox[{"AnnotationValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"g", ",", "v1"}], "}"}], ",", "VertexCoordinates"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"v2xy", "=", 
         RowBox[{"AnnotationValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"g", ",", "v2"}], "}"}], ",", "VertexCoordinates"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "v1xy", "]"}], "<", 
           RowBox[{"First", "[", "v2xy", "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"v1", "\[DirectedEdge]", " ", "v2"}], ",", 
          RowBox[{"v2", "\[DirectedEdge]", " ", "v1"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"directedGraphRightwards", "[", "g_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v", ",", "vxy", ",", "edges", ",", "d"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"v", "=", 
         RowBox[{"VertexList", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"vxy", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", 
             RowBox[{"AnnotationValue", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"g", ",", "#"}], "}"}], ",", "VertexCoordinates"}], 
              "]"}]}], "&"}], ",", "v"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"edges", " ", "=", 
         RowBox[{"EdgeList", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"edges", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"edgeDirectedRightwards", "[", 
             RowBox[{"g", ",", "#"}], "]"}], "&"}], ",", "edges"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"v", ",", "edges", ",", 
           RowBox[{"VertexCoordinates", "->", "vxy"}], ",", 
           RowBox[{"VertexSize", "->", "Tiny"}], ",", 
           RowBox[{"VertexLabels", "->", "\"\<Name\>\""}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"EdgeShapeFunction", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\"\<HalfFilledArrow\>\"", ",", 
               RowBox[{"\"\<ArrowSize\>\"", "\[Rule]", ".05"}]}], "}"}], 
             "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
        "\[IndentingNewLine]", "d"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[449]:=",ExpressionUUID->"f4b24dd1-1ed6-46f8-901f-2a47d64e1d74"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"leftRightChainEdges", "[", "d_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nonbares", ",", "nonbarePaths", ",", "nonbarePath", ",", "pathToDE", 
        ",", "pathscore", ",", "chains"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nonbares", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"VertexList", "[", "d", "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"bareNumberQ", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nonbarePaths", "[", 
         RowBox[{"left", "[", "node_", "]"}], "]"}], " ", ":=", "  ", 
        RowBox[{"FindPath", "[", 
         RowBox[{"d", ",", 
          RowBox[{"left", "[", "node", "]"}], ",", "node", ",", "\[Infinity]",
           ",", "All"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nonbarePaths", "[", 
         RowBox[{"right", "[", "node_", "]"}], "]"}], " ", ":=", "  ", 
        RowBox[{"FindPath", "[", 
         RowBox[{"d", ",", "node", ",", 
          RowBox[{"right", "[", "node", "]"}], ",", "\[Infinity]", ",", 
          "All"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pathscore", "[", "path_", "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "z", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"z", "=", " ", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "@", 
                RowBox[{"AnnotationValue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"d", ",", "#"}], "}"}], ",", "VertexCoordinates"}],
                  "]"}]}], "&"}], ",", "path"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"z", "=", " ", 
            RowBox[{"z", "-", " ", 
             RowBox[{"Mean", "[", "z", "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"z", "=", " ", 
            RowBox[{"Map", "[", 
             RowBox[{"Abs", ",", "z"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"z", "=", " ", 
            RowBox[{"Total", "[", "z", "]"}]}], ";", "\[IndentingNewLine]", 
           "z"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nonbarePath", "[", "node_", "]"}], " ", ":=", "  ", 
        RowBox[{"First", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"nonbarePaths", "[", "node", "]"}], ",", "pathscore"}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pathToDE", "[", "path_", "]"}], " ", ":=", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"monitorTopChainCount", "=", "path"}], ";", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Apply", "[", 
              RowBox[{"UndirectedEdge", ",", "#"}], "]"}], "&"}], ",", 
            RowBox[{"Partition", "[", 
             RowBox[{"path", ",", "2", ",", "1"}], "]"}]}], "]"}]}], ")"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"chains", "=", 
        RowBox[{"Association", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"bareNumber", "[", "#", "]"}], "->", 
             RowBox[{"pathToDE", "[", 
              RowBox[{"nonbarePath", "[", "#", "]"}], "]"}]}], "&"}], ",", 
           "nonbares"}], "]"}]}]}], ";", "\[IndentingNewLine]", "chains"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pickShortest", "[", "edgeList_", "]"}], " ", ":=", " ", 
     RowBox[{"First", "@", 
      RowBox[{"SortBy", "[", 
       RowBox[{"edgeList", ",", 
        RowBox[{"#Xdifference", "&"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[451]:=",ExpressionUUID->"d194f79b-e203-483a-9fee-6f9753d4b715"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"countbyPath", "[", "chain_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "=", 
        RowBox[{"Counts", "[", 
         RowBox[{"classifyPath", "[", "chain", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"res", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
              "RGBColorSwatchTemplate"], "\[Rule]", "0"}], ",", 
            RowBox[{
             TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
              "RGBColorSwatchTemplate"], "\[Rule]", "0"}]}], 
           "\[RightAssociation]"}], ",", "res"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"res", "=", 
        RowBox[{"KeySort", "[", "res", "]"}]}], ";", "\[IndentingNewLine]", 
       "res"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"classifyPath", "[", "chain_", "]"}], " ", ":=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"classifyPathEdge", "[", 
       RowBox[{"chain", ",", "#"}], "]"}], "&"}], ",", 
     RowBox[{"EdgeList", "[", "chain", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"classifyPathEdge", "[", 
     RowBox[{"g_", ",", 
      RowBox[{"v1_", "\[UndirectedEdge]", " ", "v2_"}]}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v1xy", ",", "v2xy"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"v1xy", "=", 
        RowBox[{"AnnotationValue", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"g", ",", "v1"}], "}"}], ",", "VertexCoordinates"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"v2xy", "=", 
        RowBox[{"AnnotationValue", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"g", ",", "v2"}], "}"}], ",", "VertexCoordinates"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"v1xy", ",", "v2xy"}], "}"}], "=", " ", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"v1xy", ",", "v2xy"}], "}"}], ",", "First"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", "v1xy", "]"}], ">=", 
          RowBox[{"Last", "[", "v2xy", "]"}]}], ",", "Red", ",", "Blue"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"chainFromEdges", "[", "chainEdges_", "]"}], ":=", " ", 
   RowBox[{"Union", "@@", 
    RowBox[{"(", 
     RowBox[{"List", "@@@", "chainEdges"}], ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flattestChains", "[", "g_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", "chainEdges", ",", "chains"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"directedGraphRightwards", "[", "g", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"chainEdges", "=", " ", 
      RowBox[{"leftRightChainEdges", "[", "d", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"chains", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"<|", 
          RowBox[{"\"\<Chain\>\"", "->", 
           RowBox[{"Subgraph", "[", 
            RowBox[{"g", ",", "#"}], "]"}]}], "|>"}], "&"}], ",", 
        "chainEdges"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"chains", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"#", ",", 
           RowBox[{"\"\<Parastichy\>\"", "->", 
            RowBox[{"countbyPath", "[", "#Chain", "]"}]}]}], "]"}], "&"}], 
        ",", "chains"}], "]"}]}], ";", "\[IndentingNewLine]", "chains"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[452]:=",ExpressionUUID->"79f13b3a-b1c9-4261-852e-903a6989a28b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Post run statistics", "Section",ExpressionUUID->"dcaf62c6-2346-40e9-93b5-7087409c8a22"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"postRunFlatChain", "[", "run_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", "chains", ",", "nrchains"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", " ", "=", " ", "run"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "topdown", " ", "uses", " ", "the", " ", "topChain", " ", "code", " ",
          "from", " ", "the", " ", "runtime"}], ",", " ", 
        RowBox[{
         RowBox[{
         "so", " ", "looks", " ", "up", " ", "xy", " ", "coords", " ", "in", 
          " ", "the", " ", 
          RowBox[{"run", "[", "\"\<DiskData\>\"", "]"}]}], ";", " ", 
         RowBox[{
         "flattestChainData", " ", "relies", " ", "on", " ", "these", " ", 
          "having", " ", "gone", " ", "into", " ", "the", " ", "graph", " ", 
          "vertexcoordinates", " ", "already"}]}], ",", " ", "sigh"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"res", "=", " ", 
       RowBox[{"Append", "[", 
        RowBox[{"res", ",", 
         RowBox[{"\"\<FlatChains\>\"", "->", 
          RowBox[{"flattestChainData", "[", 
           RowBox[{"res", "[", "\"\<ContactGraph\>\"", "]"}], "]"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"postRunChain", "[", "run_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", "chains", ",", "nrchains"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", " ", "=", " ", "run"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "topdown", " ", "uses", " ", "the", " ", "topChain", " ", "code", " ",
          "from", " ", "the", " ", "runtime"}], ",", " ", 
        RowBox[{
         RowBox[{
         "so", " ", "looks", " ", "up", " ", "xy", " ", "coords", " ", "in", 
          " ", "the", " ", 
          RowBox[{"run", "[", "\"\<DiskData\>\"", "]"}]}], ";", " ", 
         RowBox[{
         "flattestChainData", " ", "relies", " ", "on", " ", "these", " ", 
          "having", " ", "gone", " ", "into", " ", "the", " ", "graph", " ", 
          "vertexcoordinates", " ", "already"}]}], ",", " ", "sigh"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      AdjustmentBox[
       RowBox[{"res", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"res", ",", 
          RowBox[{"\"\<Chains\>\"", "->", 
           RowBox[{"topdownChains", "[", 
            RowBox[{"res", ",", 
             RowBox[{"res", "[", "\"\<ContactGraph\>\"", "]"}]}], "]"}]}]}], 
         "]"}]}],
       BoxMargins->{{-0.111039536306243, 0.111039536306243}, {0., 0.}}], 
      AdjustmentBox[";",
       BoxMargins->{{-0.111039536306243, 0.111039536306243}, {0., 0.}}], 
      AdjustmentBox["\[IndentingNewLine]",
       BoxMargins->{{-0.111039536306243, 0.111039536306243}, {0., 0.}}], 
      "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"postRunNodeStatistics", "[", "run_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", "angles"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", " ", "=", " ", "run"}], ";", "\[IndentingNewLine]", 
      RowBox[{"angles", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"<|", 
           RowBox[{"\"\<Angle\>\"", "->", "#"}], "|>"}], "&"}], ",", 
         RowBox[{"computeNodeLowerAngles", "[", "run", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "=", " ", 
       RowBox[{"Append", "[", 
        RowBox[{"res", ",", 
         RowBox[{"\"\<NodeStatistics\>\"", "->", " ", "angles"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "res"}]}], " ", "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[457]:=",ExpressionUUID->"96fdb540-5c38-4411-9aa5-a581c6b67d28"]
}, Closed]],

Cell[CellGroupData[{

Cell["Chains by flattest", "Section",ExpressionUUID->"9730dee0-6804-47e5-929f-da704fe433e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"flattestChainData", "[", 
     RowBox[{"graph_", ",", 
      RowBox[{"chainsToDo_", ":", "100"}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "g", ",", "chainGraphSet", ",", "chains"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"chains", "=", " ", 
        RowBox[{"flattestChains", "[", "graph", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"chainSet", "=", 
        RowBox[{"chains", " ", "/.", " ", 
         RowBox[{"DirectedEdge", " ", "->", " ", "UndirectedEdge"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"chainSet", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", 
             RowBox[{"\"\<MeanZ\>\"", "->", 
              RowBox[{"chainMeanZ", "[", "#Chain", "]"}]}]}], "]"}], "&"}], 
          ",", "chainSet"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"chainSet", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", 
             RowBox[{"\"\<MeanRadius\>\"", "->", 
              RowBox[{"chainMeanRadius", "[", "#Chain", "]"}]}]}], "]"}], 
           "&"}], ",", "chainSet"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "chainSet"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chainMeanZ", "[", "chain_", "]"}], " ", ":=", " ", 
    RowBox[{"Last", "@", 
     RowBox[{"Mean", "@", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"AnnotationValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"chain", ",", "#"}], "}"}], ",", "VertexCoordinates"}], 
          "]"}], "&"}], ",", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"VertexList", "[", "chain", "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}]}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"chainMeanRadius", "[", "chain_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e", ",", "gxy"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"gxy", "[", "n_", "]"}], " ", ":=", 
       RowBox[{"AnnotationValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"chain", ",", "n"}], "}"}], ",", "VertexCoordinates"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"norm", "[", 
        RowBox[{"n1_", ",", "n2_"}], "]"}], " ", ":=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"gxy", "[", "n2", "]"}], "-", 
         RowBox[{"gxy", "[", "n1", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"e", "=", 
       RowBox[{"EdgeList", "[", "chain", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"e", "=", 
       RowBox[{"norm", " ", "@@@", " ", "e"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Mean", "[", "e", "]"}], "/", "2"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[460]:=",ExpressionUUID->"1c388f6a-668e-48a6-9d20-dfb1ee47c9cc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Top down chains", "Section",ExpressionUUID->"02928905-33f5-4b4c-b801-70444cfc3c20"],

Cell[BoxData[""], "Input",
 CellLabel->
  "In[278]:=",ExpressionUUID->"e5fc2166-0d22-48a8-a583-5a9777f95198"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"topdownChains", "[", 
     RowBox[{"run_", ",", "graph_", ",", 
      RowBox[{"chainsToDo_", ":", "100"}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "g", ",", "chainGraphSet", ",", "chain", ",", "chainGraph"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", "=", 
        RowBox[{"Graph", "[", 
         RowBox[{"graph", ",", 
          RowBox[{"VertexLabels", "->", "\"\<Name\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"chainGraphSet", "=", 
        RowBox[{"List", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "0"}], ",", 
         RowBox[{"i", "<", "chainsToDo"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"monitorTopDownChainCount", "=", "i"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"chain", "=", 
           RowBox[{"topChainInRun", "[", 
            RowBox[{"run", ",", "g"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"chainGraph", "=", 
           RowBox[{"Subgraph", "[", 
            RowBox[{"g", ",", "chain"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"chainGraph", "=", " ", 
           RowBox[{"Graph", "[", 
            RowBox[{"chainGraph", ",", 
             RowBox[{"VertexLabels", "->", "\"\<Name\>\""}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"chainGraphSet", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"chainGraphSet", ",", " ", "chainGraph"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"g", "=", 
           RowBox[{"stripChain", "[", 
            RowBox[{"g", ",", "chain"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"VertexList", "[", "g", "]"}], "]"}], "==", "0"}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", 
       RowBox[{"monitorTopDownChainCount", "=", "\"\<Done\>\""}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"chainSet", "=", "\[IndentingNewLine]", 
        RowBox[{"Association", "@", 
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"First", "[", "#2", "]"}], "->", 
             RowBox[{"<|", 
              RowBox[{"\"\<Chain\>\"", "->", "#1"}], "|>"}]}], "&"}], ",", 
           RowBox[{"Reverse", "[", "chainGraphSet", "]"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"chainSet", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", 
             RowBox[{"\"\<Parastichy\>\"", "->", 
              RowBox[{"chainParastichy", "[", "#Chain", "]"}]}]}], "]"}], 
           "&"}], ",", "chainSet"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"chainSet", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", 
             RowBox[{"\"\<MeanZ\>\"", "->", 
              RowBox[{"chainMeanZ", "[", "#Chain", "]"}]}]}], "]"}], "&"}], 
          ",", "chainSet"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"chainSet", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", 
             RowBox[{"\"\<MeanRadius\>\"", "->", 
              RowBox[{"chainMeanRadius", "[", "#Chain", "]"}]}]}], "]"}], 
           "&"}], ",", "chainSet"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"chainSet", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", 
             RowBox[{"\"\<AngleMean\>\"", "->", 
              RowBox[{"chainMeanLatticeAngle", "[", 
               RowBox[{"run", ",", "#Chain"}], "]"}]}]}], "]"}], "&"}], ",", 
          "chainSet"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"chainSet", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", 
             RowBox[{"\"\<AngleSD\>\"", "->", 
              RowBox[{"chainSDLatticeAngle", "[", 
               RowBox[{"run", ",", "#Chain"}], "]"}]}]}], "]"}], "&"}], ",", 
          "chainSet"}], "]"}]}], ";", "\[IndentingNewLine]", "chainSet"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"chainMeanLatticeAngle", "[", 
    RowBox[{"run_", ",", "chain_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"v", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "chain", "]"}], ",", "bareNumberQ"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", " ", 
       RowBox[{"KeyTake", "[", 
        RowBox[{
         RowBox[{"run", "[", "\"\<NodeStatistics\>\"", "]"}], ",", "v"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{"#Angle", "&"}], ",", "res"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Mean", "[", "res", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chainSDLatticeAngle", "[", 
     RowBox[{"run_", ",", "chain_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"res", ",", "v"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"v", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"VertexList", "[", "chain", "]"}], ",", "bareNumberQ"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"res", "=", " ", 
        RowBox[{"KeyTake", "[", 
         RowBox[{
          RowBox[{"run", "[", "\"\<NodeStatistics\>\"", "]"}], ",", "v"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"res", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"#Angle", "&"}], ",", "res"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "res", "]"}], "<", "2"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"Missing", "[", "\"\<monoEdge\>\"", "]"}], "]"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"StandardDeviation", "[", "res", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chainMeanZ", "[", "chain_", "]"}], " ", ":=", " ", 
    RowBox[{"Last", "@", 
     RowBox[{"Mean", "@", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"AnnotationValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"chain", ",", "#"}], "}"}], ",", "VertexCoordinates"}], 
          "]"}], "&"}], ",", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"VertexList", "[", "chain", "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}]}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"chainMeanRadius", "[", "chain_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e", ",", "gxy"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"gxy", "[", "n_", "]"}], " ", ":=", 
       RowBox[{"AnnotationValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"chain", ",", "n"}], "}"}], ",", "VertexCoordinates"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"norm", "[", 
        RowBox[{"n1_", ",", "n2_"}], "]"}], " ", ":=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"gxy", "[", "n2", "]"}], "-", 
         RowBox[{"gxy", "[", "n1", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"e", "=", 
       RowBox[{"EdgeList", "[", "chain", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"e", "=", 
       RowBox[{"norm", " ", "@@@", " ", "e"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Mean", "[", "e", "]"}], "/", "2"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[463]:=",ExpressionUUID->"bdc1b657-ed32-49e2-9a34-2aac819d670b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stripChain", "[", 
     RowBox[{"g_", ",", "chain_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "lrchain", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lrchain", " ", "=", 
        RowBox[{"leftAndRightNumbers", "[", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"bareNumber", "/@", "chain"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"lrchain", "=", " ", 
        RowBox[{"Intersection", "[", 
         RowBox[{"lrchain", ",", 
          RowBox[{"VertexList", "[", "g", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"VertexDelete", "[", 
        RowBox[{"g", ",", "lrchain"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chainEncircles", "[", "chain_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "lrNode", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lrNode", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"VertexList", "[", "chain", "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"bareNumberQ", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "lrNode", "]"}], "!=", "1"}], ",", 
         RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "chain", "]"}], ",", 
         RowBox[{"bareNumber", "[", 
          RowBox[{"First", "[", "lrNode", "]"}], "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chainParastichy", "[", "chain_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"chainEncircles", "[", "chain", "]"}]}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"Missing", "[", "\"\<Not encircling\>\"", "]"}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"AcyclicGraphQ", "[", "chain", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"acyclicChainParastichy", "[", "chain", "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"cyclicChainParastichy", "[", "chain", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cyclicChainParastichy", "[", "chain_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "reducedchain", ",", "v", ",", "first", ",", "last", ",", "edges", ",",
         "res"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"v", "=", 
        RowBox[{"VertexList", "[", "chain", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"v", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{"v", ",", 
          RowBox[{
           RowBox[{"AnnotationValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"chain", ",", "#"}], "}"}], ",", "VertexCoordinates"}], 
            "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"first", "=", 
        RowBox[{"First", "[", "v", "]"}]}], ";", 
       RowBox[{"last", "=", 
        RowBox[{"Last", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"edges", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"FindCycle", "[", 
           RowBox[{"chain", ",", "Infinity", ",", "All"}], "]"}], ",", "2"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vInLoops", "=", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"List", "@@@", "edges"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"first", ",", "last"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vInLoops", "=", 
        RowBox[{"Association", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", 
             RowBox[{"EdgeCount", "[", 
              RowBox[{"chain", ",", 
               RowBox[{"#", " ", "\[UndirectedEdge]", " ", "_"}]}], "]"}]}], 
            "&"}], ",", "vInLoops"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vInLoops", " ", "=", 
        RowBox[{"Keys", "[", 
         RowBox[{"Select", "[", 
          RowBox[{"vInLoops", ",", 
           RowBox[{
            RowBox[{"#", "==", "2"}], " ", "&"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"reducedchain", " ", "=", " ", 
        RowBox[{"VertexDelete", "[", 
         RowBox[{"chain", ",", "vInLoops"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"AcyclicGraphQ", "[", "reducedchain", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"acyclicChainParastichy", "[", "reducedchain", "]"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"edges", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"FindCycle", "[", 
           RowBox[{"reducedchain", ",", "Infinity", ",", "All"}], "]"}], ",", 
          "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"res", "=", 
        RowBox[{"Association", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", 
             RowBox[{"EdgeDelete", "[", 
              RowBox[{"reducedchain", ",", "#"}], "]"}]}], "&"}], ",", 
           "edges"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"res", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"res", ",", "gIsLinear"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"res", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"res", ",", "gIsChain"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "res", "]"}], "==", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"Missing", "[", "\"\<Can't decyclic\>\"", "]"}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "res", "]"}], ">", "1"}], ",", 
           RowBox[{
            RowBox[{"w", "=", "res"}], ";", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Multi decyclics\>\"", ",", "chain", ",", "res"}], 
             "]"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", "*)"}], 
       RowBox[{"res", "=", 
        RowBox[{"First", "[", "res", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"AcyclicGraphQ", "[", "res", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Can't declyce\>\"", ",", "chain"}], "]"}], ";", 
          RowBox[{"Return", "[", 
           RowBox[{"Missing", "[", "]"}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"acyclicChainParastichy", "[", "res", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gIsLinear", "[", "g_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"EdgeCount", "[", 
           RowBox[{"g", ",", 
            RowBox[{"#", "\[UndirectedEdge]", " ", "_"}]}], "]"}], "&"}], ",", 
         RowBox[{"VertexList", "[", "g", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "<=", "2"}], "&"}], ",", "res"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gIsChain", "[", "g_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", ",", "first", ",", "last", ",", "graph"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"v", "=", 
        RowBox[{"VertexList", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"v", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{"v", ",", 
          RowBox[{
           RowBox[{"AnnotationValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"g", ",", "#"}], "}"}], ",", "VertexCoordinates"}], 
            "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"first", "=", 
        RowBox[{"First", "[", "v", "]"}]}], ";", 
       RowBox[{"last", "=", 
        RowBox[{"Last", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"graph", "=", 
        RowBox[{"VertexDelete", "[", 
         RowBox[{"g", ",", 
          RowBox[{"{", 
           RowBox[{"first", ",", "last"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ConnectedGraphQ", "[", "graph", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"acyclicChainParastichy", "[", "chain_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"AcyclicGraphQ", "[", "chain", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<aCP\>\"", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"KeySort", "@", 
        RowBox[{"Counts", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"AnnotationValue", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"chain", ",", "#"}], "}"}], ",", "EdgeStyle"}], "]"}], 
            "&"}], ",", 
           RowBox[{"EdgeList", "[", "chain", "]"}]}], "]"}], 
         "\[IndentingNewLine]", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"<|", 
          RowBox[{
           RowBox[{
            TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
             "RGBColorSwatchTemplate"], "\[Rule]", "0"}], ",", 
           RowBox[{
            TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
             "RGBColorSwatchTemplate"], "\[Rule]", "0"}]}], "|>"}], ",", 
         "res"}], "]"}]}], ";", "\[IndentingNewLine]", "res"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[468]:=",ExpressionUUID->"cea06e88-a8dc-4e3f-bad8-211a8549f682"],

Cell[BoxData[""], "Input",
 CellLabel->
  "In[291]:=",ExpressionUUID->"e6e871de-f379-4e8e-84fa-52dbeec9d737"],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeNodeLowerAngles", "[", "run_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"v", ",", "edges", ",", "edgePairAngle"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"v", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"VertexList", "[", 
         RowBox[{"run", "[", "\"\<ContactGraph\>\"", "]"}], "]"}], ",", 
        "bareNumberQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Association", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", 
             RowBox[{"lowerEdges", "[", 
              RowBox[{
               RowBox[{"run", "[", "\"\<ContactGraph\>\"", "]"}], ",", " ", 
               "#"}], "]"}]}], "&"}], ",", "v"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], "==", "2"}], "&"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"edges", "=", " ", 
      RowBox[{"Association", "@", 
       RowBox[{"KeyValueMap", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "->", 
           RowBox[{"Values", "@", 
            RowBox[{"KeyTake", "[", 
             RowBox[{
              RowBox[{"vectorsFromNode", "[", 
               RowBox[{"run", ",", 
                RowBox[{"run", "[", "\"\<ContactGraph\>\"", "]"}], ",", 
                "#1"}], "]"}], ",", "#2"}], "]"}]}]}], "&"}], ",", "edges"}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"edgePairAngle", "[", 
       RowBox[{"{", 
        RowBox[{"e1_", ",", "e2_"}], "}"}], "]"}], " ", ":=", " ", 
      RowBox[{"ArcCos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"e1", " ", ".", " ", "e2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Norm", "[", "e1", "]"}], "*", 
          RowBox[{"Norm", "[", "e2", "]"}]}], ")"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"edges", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"edgePairAngle", ",", "edges"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "edges"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[475]:=",ExpressionUUID->"b7fede83-2c23-4a86-bb14-9a07e00bc8ff"]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{708, 523.75},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e0a65ce9-d3e5-4751-af7c-19a13d9af0b6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 336, 10, 64, "Input",ExpressionUUID->"7d77eaad-7cce-48eb-b198-8dc4dd759adc",
 InitializationCell->True],
Cell[897, 32, 406, 11, 86, "Input",ExpressionUUID->"63698a6f-c9c8-4f3f-80bf-2e8b93070e6d"],
Cell[CellGroupData[{
Cell[1328, 47, 159, 3, 67, "Section",ExpressionUUID->"6ab48122-af17-4dcf-b0ec-7c9b2b450180"],
Cell[CellGroupData[{
Cell[1512, 54, 87, 0, 54, "Subsection",ExpressionUUID->"3fdd36e3-3992-4f1d-88ff-ec2aef2b86e3"],
Cell[1602, 56, 11206, 324, 1148, "Input",ExpressionUUID->"c79fdebc-f9ae-4df7-a656-4383f6352b8d",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12857, 386, 84, 0, 67, "Section",ExpressionUUID->"77a3141e-802f-42c1-8a57-5eddf8adc775"],
Cell[12944, 388, 4951, 112, 730, "Input",ExpressionUUID->"15e75fbe-967c-44f1-86aa-fa34b59eca50",
 InitializationCell->True],
Cell[17898, 502, 1021, 26, 159, "Input",ExpressionUUID->"6dbf7845-f16b-4a34-8ebf-111941a4cda1",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[18956, 533, 85, 0, 67, "Section",ExpressionUUID->"fe596e68-0dda-4801-93e2-f79621326472"],
Cell[19044, 535, 4877, 120, 787, "Input",ExpressionUUID->"a4b33fd4-cfad-47f7-b4b8-c7dc11ced13c",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[23946, 659, 103, 0, 54, "Subsection",ExpressionUUID->"fb7ad483-325c-48f9-903f-4c82bbc04077"],
Cell[24052, 661, 1402, 35, 197, "Input",ExpressionUUID->"a04cc5cb-f6d3-44cb-948c-5de7b31d7bb1",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[25491, 701, 85, 0, 54, "Subsection",ExpressionUUID->"32ddfbab-160a-4ef8-9688-21a17a7fd521"],
Cell[25579, 703, 10983, 271, 1236, "Input",ExpressionUUID->"23e63cff-41ae-4da1-ab93-1eb2e9df7891",
 InitializationCell->True],
Cell[36565, 976, 109, 2, 28, "Input",ExpressionUUID->"0f484384-5889-4ff3-88d7-8f8c1cc21f5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36711, 983, 101, 0, 54, "Subsection",ExpressionUUID->"900f452c-4418-404f-9471-5d58f41943c7"],
Cell[36815, 985, 4952, 119, 787, "Input",ExpressionUUID->"02fccc85-fef0-4c13-84c1-f73552faeba6",
 InitializationCell->True],
Cell[41770, 1106, 13626, 337, 1491, "Input",ExpressionUUID->"8f35855e-730d-494f-9510-0e9747f37f82",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[55433, 1448, 95, 0, 54, "Subsection",ExpressionUUID->"1010e017-b941-42de-9bd2-be5b0763ab01"],
Cell[55531, 1450, 2478, 65, 387, "Input",ExpressionUUID->"7b6e07ad-c2cf-4ede-864a-e066b48066f4",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58058, 1521, 91, 0, 67, "Section",ExpressionUUID->"bff67e66-cad0-497c-adf1-b1d32240d7a9"],
Cell[58152, 1523, 1208, 31, 197, "Input",ExpressionUUID->"f84550c7-7952-4387-a527-80b00981d42e",
 InitializationCell->True],
Cell[59363, 1556, 4269, 104, 539, "Input",ExpressionUUID->"852c2853-bfd6-4866-bf92-ccc59ded20a4",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[63669, 1665, 97, 0, 53, "Section",ExpressionUUID->"2e49cea5-0ab8-4bd6-953e-36c8829dd9b4"],
Cell[63769, 1667, 4489, 117, 558, "Input",ExpressionUUID->"8585f538-fa91-4aed-9d43-3a8cd615890c",
 InitializationCell->True],
Cell[68261, 1786, 8120, 205, 787, "Input",ExpressionUUID->"cf4fbca8-16e4-41a8-ab10-c6e82f834d1a",
 InitializationCell->True],
Cell[76384, 1993, 109, 2, 28, "Input",ExpressionUUID->"aeb4abcf-f428-4e6b-aa1b-c97580f5ddc0"],
Cell[76496, 1997, 3138, 81, 311, "Input",ExpressionUUID->"47af14ed-82ad-48bd-b9e6-a0a83892fbeb",
 InitializationCell->True],
Cell[79637, 2080, 109, 2, 28, "Input",ExpressionUUID->"b11ffafd-c36c-44c8-8904-03c4b025b92a"],
Cell[79749, 2084, 189, 4, 86, "Input",ExpressionUUID->"2e1ac415-52b8-4cb3-bb7f-78f20931c1fb"],
Cell[79941, 2090, 3287, 82, 368, "Input",ExpressionUUID->"f4b24dd1-1ed6-46f8-901f-2a47d64e1d74",
 InitializationCell->True],
Cell[83231, 2174, 4322, 105, 501, "Input",ExpressionUUID->"d194f79b-e203-483a-9fee-6f9753d4b715",
 InitializationCell->True],
Cell[87556, 2281, 4418, 121, 482, "Input",ExpressionUUID->"79f13b3a-b1c9-4261-852e-903a6989a28b",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[92011, 2407, 93, 0, 53, "Section",ExpressionUUID->"dcaf62c6-2346-40e9-93b5-7087409c8a22"],
Cell[92107, 2409, 4172, 100, 425, "Input",ExpressionUUID->"96fdb540-5c38-4411-9aa5-a581c6b67d28",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[96316, 2514, 92, 0, 53, "Section",ExpressionUUID->"9730dee0-6804-47e5-929f-da704fe433e0"],
Cell[96411, 2516, 3482, 92, 444, "Input",ExpressionUUID->"1c388f6a-668e-48a6-9d20-dfb1ee47c9cc",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[99930, 2613, 89, 0, 53, "Section",ExpressionUUID->"02928905-33f5-4b4c-b801-70444cfc3c20"],
Cell[100022, 2615, 109, 2, 28, "Input",ExpressionUUID->"e5fc2166-0d22-48a8-a583-5a9777f95198"],
Cell[100134, 2619, 8943, 229, 958, "Input",ExpressionUUID->"bdc1b657-ed32-49e2-9a34-2aac819d670b",
 InitializationCell->True],
Cell[109080, 2850, 11828, 305, 1434, "Input",ExpressionUUID->"cea06e88-a8dc-4e3f-bad8-211a8549f682",
 InitializationCell->True],
Cell[120911, 3157, 109, 2, 28, "Input",ExpressionUUID->"e6e871de-f379-4e8e-84fa-52dbeec9d737"],
Cell[121023, 3161, 2391, 65, 197, "Input",ExpressionUUID->"b7fede83-2c23-4a86-bb14-9a07e00bc8ff",
 InitializationCell->True]
}, Open  ]]
}
]
*)

