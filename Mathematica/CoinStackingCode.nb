(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     83429,       2161]
NotebookOptionsPosition[     79780,       2085]
NotebookOutlinePosition[     80247,       2103]
CellTagsIndexPosition[     80204,       2100]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
     RowBox[{"AutoGeneratedPackage", "->", "Automatic"}]}], "]"}], ";"}], 
  "\n"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[34]:=",ExpressionUUID->"7d77eaad-7cce-48eb-b198-8dc4dd759adc"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dPrint", "[", "x__", "]"}], " ", ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{"debug", ",", " ", 
       RowBox[{"Print", "[", "x", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellLabel->
  "In[170]:=",ExpressionUUID->"63698a6f-c9c8-4f3f-80bf-2e8b93070e6d"],

Cell[CellGroupData[{

Cell["Chain code", "Section",
 CellChangeTimes->{{3.8595354332704773`*^9, 
  3.8595354401520576`*^9}},ExpressionUUID->"6ab48122-af17-4dcf-b0ec-\
7c9b2b450180"],

Cell[CellGroupData[{

Cell["Utilities ", "Subsection",ExpressionUUID->"3fdd36e3-3992-4f1d-88ff-ec2aef2b86e3"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"diskZ", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "z_"}], "}"}], ",", "_"}], "]"}], "]"}], " ", ":=",
      " ", "z"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskX", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "_"}], "}"}], ",", "_"}], "]"}], "]"}], " ", ":=",
      " ", "x"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskXZ", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "z"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskRightX", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"x", "+", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskLeftX", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"x", "-", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskTopZ", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"z", "+", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskR", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", "r"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberRight", "[", "n_", "]"}], " ", ":=", " ", 
     RowBox[{"right", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberRight", "[", 
      RowBox[{"left", "[", "n_", "]"}], "]"}], " ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberLeft", "[", "n_", "]"}], " ", ":=", " ", 
     RowBox[{"left", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberLeft", "[", 
      RowBox[{"right", "[", "n_", "]"}], "]"}], " ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"leftAndRightNumbers", "[", "n_List", "]"}], " ", ":=", " ", 
     RowBox[{"Join", "@@", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"moveNumberRight", "/@", "n"}], ",", 
        RowBox[{"moveNumberLeft", "/@", "n"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bareNumber", "[", 
      RowBox[{"left", "[", "n_", "]"}], "]"}], "  ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bareNumber", "[", 
      RowBox[{"right", "[", "n_", "]"}], "]"}], " ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bareNumber", "[", "n_", "]"}], " ", ":=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bareNumberQ", "[", "n_", "]"}], " ", ":=", " ", 
     RowBox[{"n", "===", 
      RowBox[{"bareNumber", "[", "n", "]"}]}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveDiskRight", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      "\[IndentingNewLine]", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "+", "1"}], ",", "z"}], "}"}], ",", "r"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveDiskLeft", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      "\[IndentingNewLine]", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "-", "1"}], ",", "z"}], "}"}], ",", "r"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberedDiskRight", "[", 
      RowBox[{"n_", "->", "d_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"moveNumberRight", "[", "n", "]"}], "->", 
      RowBox[{"moveDiskRight", "[", "d", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveNumberedDiskLeft", "[", 
      RowBox[{"n_", "->", "d_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"moveNumberLeft", "[", "n", "]"}], "->", 
      RowBox[{"moveDiskLeft", "[", "d", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"getDisk", "[", "n_", "]"}], " ", ":=", " ", 
    RowBox[{"getDiskFromRun", "[", 
     RowBox[{"globalRun", ",", "n"}], "]"}]}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDiskFromRun", "[", 
      RowBox[{"run_", ",", "n_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"run", "[", "\"\<DiskData\>\"", "]"}], "[", "n", "]"}], "[", 
      "\"\<Disk\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDiskFromRun", "[", 
      RowBox[{"run_", ",", 
       RowBox[{"right", "[", "n_", "]"}]}], "]"}], " ", ":=", "  ", 
     RowBox[{"moveDiskRight", "[", 
      RowBox[{"getDiskFromRun", "[", 
       RowBox[{"run", ",", "n"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDiskFromRun", "[", 
      RowBox[{"run_", ",", 
       RowBox[{"left", "[", "n_", "]"}]}], "]"}], " ", ":=", " ", 
     RowBox[{"moveDiskLeft", "[", 
      RowBox[{"getDiskFromRun", "[", 
       RowBox[{"run", ",", "n"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDiskXZ", "[", 
      RowBox[{"run_", ",", "n_"}], "]"}], " ", ":=", " ", 
     RowBox[{"diskXZ", "[", 
      RowBox[{"getDiskFromRun", "[", 
       RowBox[{"run", ",", "n"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDiskXZ", "[", "n_", "]"}], " ", ":=", 
     RowBox[{"getDiskXZ", "[", 
      RowBox[{"globalRun", ",", "n"}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDiskZ", "[", 
      RowBox[{"run_", ",", "n_"}], "]"}], " ", ":=", " ", 
     RowBox[{"diskZ", "[", 
      RowBox[{"getDiskFromRun", "[", 
       RowBox[{"run", ",", "n"}], "]"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"getDiskZ", "[", "n_", "]"}], " ", ":=", 
     RowBox[{"getDiskZ", "[", 
      RowBox[{"globalRun", ",", "n"}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskIsLeft", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=", 
     RowBox[{"x", "<", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskIsRight", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=", 
     RowBox[{"x", ">", 
      RowBox[{"1", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskIsNormalised", "[", "d_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"!", " ", 
        RowBox[{"diskIsLeft", "[", "d", "]"}]}], ")"}], " ", "&&", " ", 
      RowBox[{"(", 
       RowBox[{"!", " ", 
        RowBox[{"diskIsRight", "[", "d", "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"disksMaximum", "[", "]"}], " ", ":=", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Max", "@", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"diskTopZ", "[", 
          RowBox[{"getDisk", "[", "#", "]"}], "]"}], "&"}], ",", 
        RowBox[{"Keys", "[", 
         RowBox[{"globalRun", "[", "\"\<DiskData\>\"", "]"}], "]"}]}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"highestDiskZ", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Max", "@", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"diskZ", "[", 
          RowBox[{"getDiskFromRun", "[", 
           RowBox[{"run", ",", "#"}], "]"}], "]"}], "&"}], ",", 
        RowBox[{"Keys", "[", 
         RowBox[{"run", "[", "\"\<DiskData\>\"", "]"}], "]"}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "used", " ", "in", " ", "RunCoinStacking", " ", "as", " ", "well", " ", 
      "for", " ", "setup"}], ",", " ", 
     RowBox[{"so", " ", 
      RowBox[{"don", "'"}], "t", " ", "use", " ", "the", " ", "global"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nextRadius", "[", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "highestZ", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"highestZ", "=", 
         RowBox[{"highestDiskZ", "[", "globalRun", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
          "\"\<rFunction\>\"", "]"}], "[", "highestZ", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nextDiskNumber", "[", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"bareNumber", "/@", " ", 
        RowBox[{"VertexList", "[", 
         RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], "]"}]}], 
       "]"}], "+", "1"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[35]:=",ExpressionUUID->"c79fdebc-f9ae-4df7-a656-4383f6352b8d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["run set up", "Section",ExpressionUUID->"77a3141e-802f-42c1-8a57-5eddf8adc775"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"executeRun", "[", 
      RowBox[{"run_", ",", 
       RowBox[{"chainMax_", ":", 
        RowBox[{"Missing", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "imax", ",", "res", ",", "diskTime"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Off", "[", 
         RowBox[{"SSSTriangle", "::", "tri"}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"globalRun", "=", "run"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"globalLastSupportDiskNumbers", " ", "=", " ", 
         RowBox[{"VertexList", "[", 
          RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"NumericQ", "[", "imax", "]"}]}], ",", 
          RowBox[{"imax", "=", "2000"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"monitorFunction", " ", ":=", " ", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "<=", " ", "imax"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"runCompletesArena", "[", "]"}], ",", 
              RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"diskTime", "=", " ", 
             RowBox[{"First", "@", 
              RowBox[{"Timing", "[", 
               RowBox[{"addNextDisk", "[", "]"}], "]"}]}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"monitorString", " ", ":=", " ", 
         RowBox[{
          RowBox[{
          "StringTemplate", "[", 
           "\"\< Z `Z`; per-chain time `timing`;next disk `disk`; parastichy \
`parastichy`\>\"", "]"}], "[", 
          RowBox[{"<|", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\"\<disk\>\"", "->", " ", 
             RowBox[{"nextDiskNumber", "[", "]"}]}], "\[IndentingNewLine]", 
            ",", 
            RowBox[{"\"\<Z\>\"", "->", " ", 
             RowBox[{"disksMaximum", "[", "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"\"\<timing\>\"", "->", "diskTime"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"\"\<parastichy\>\"", "->", "monitorParastichy"}]}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{",", 
             RowBox[{"\"\<gxy\>\"", "->", 
              RowBox[{"AnnotationValue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], 
                  ",", "1"}], "}"}], ",", "VertexCoordinates"}], "]"}]}]}], 
            "\[IndentingNewLine]", "*)"}], "|>"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"False", ",", "monitorFunction", ",", 
          RowBox[{"Monitor", "[", 
           RowBox[{"monitorFunction", ",", "monitorString"}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"result", "=", " ", 
         RowBox[{"postRun", "[", "globalRun", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"First", "[", 
          RowBox[{"result", "[", "\"\<Chains\>\"", "]"}], "]"}], "]"}], ";", 
        "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[1350]:=",ExpressionUUID->"15e75fbe-967c-44f1-86aa-fa34b59eca50"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"runCompletesArena", "[", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "cutoff", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cutoff", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
            "\"\<CylinderLU\>\"", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", " ", 
          RowBox[{"2", " ", "*", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
             "\"\<rFunction\>\"", "]"}], "[", 
            RowBox[{
             RowBox[{
              RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
              "\"\<CylinderLU\>\"", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"disksMaximum", "[", "]"}], ">", "cutoff"}], " ", "||", " ", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Keys", "[", 
            RowBox[{"globalRun", "[", "\"\<DiskData\>\"", "]"}], "]"}], "]"}],
           ">", " ", 
          RowBox[{
           RowBox[{"globalRun", "[", "\"\<Arena\>\"", "]"}], "[", 
           "\"\<diskMax\>\"", "]"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[70]:=",ExpressionUUID->"6dbf7845-f16b-4a34-8ebf-111941a4cda1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["addNextDisk", "Section",ExpressionUUID->"fe596e68-0dda-4801-93e2-f79621326472"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"diskListRowFromDisk", "[", 
      RowBox[{"node_", ",", "disk_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"node", "->", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<DiskNumber\>\"", "->", "node"}], ",", 
          RowBox[{"\"\<Disk\>\"", "->", "disk"}]}], "|>"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"addNextDisk", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nextR", ",", "row", ",", "n", ",", "timing"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nextR", "=", 
        RowBox[{"nextRadius", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"row", "=", 
        RowBox[{"findNextDiskFromSupportSet", "[", "nextR", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{"nextDiskNumber", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"updateContactGraph", "[", 
        RowBox[{"n", ",", 
         RowBox[{"row", "[", "\"\<NextDisk\>\"", "]"}], ",", 
         RowBox[{"row", "[", "\"\<NextDiskRestsOn\>\"", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"globalRun", "[", "\"\<DiskData\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"diskListRowFromDisk", "[", 
          RowBox[{"n", ",", 
           RowBox[{"row", "[", "\"\<NextDisk\>\"", "]"}]}], "]"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"globalLastSupportDiskNumbers", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"globalLastSupportDiskNumbers", ",", 
          RowBox[{"leftRightCouldSupport", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], ",", "n",
             ",", 
            RowBox[{"nextRadius", "[", "]"}]}], "]"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[71]:=",ExpressionUUID->"a4b33fd4-cfad-47f7-b4b8-c7dc11ced13c"],

Cell[CellGroupData[{

Cell["findNextDiskFromSupportSet", "Subsection",ExpressionUUID->"fb7ad483-325c-48f9-903f-4c82bbc04077"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"findNextDiskFromSupportSet", "[", "nextR_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"supportTable", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"supportTable", "=", 
       RowBox[{"supportPairs", "[", "nextR", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"supportTable", "=", " ", 
       RowBox[{"SortBy", "[", 
        RowBox[{"supportTable", ",", 
         RowBox[{
          RowBox[{"diskZ", "[", "#NextDisk", "]"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "supportTable", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<No valid supports\>\"", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"First", "[", "supportTable", "]"}]}], ";", 
      "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[73]:=",ExpressionUUID->"a04cc5cb-f6d3-44cb-948c-5de7b31d7bb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["topChain", "Subsection",ExpressionUUID->"32ddfbab-160a-4ef8-9688-21a17a7fd521"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"vectorXZ", "[", 
      RowBox[{
       RowBox[{"n1_", "\[DirectedEdge]", "n2_"}], " ", "|", " ", 
       RowBox[{"n1_", "\[UndirectedEdge]", " ", "n2_"}], " ", "|", " ", 
       RowBox[{"{", 
        RowBox[{"n1_", ",", "n2_"}], "}"}]}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{
        RowBox[{"getDiskXZ", "[", "n2", "]"}], "-", 
        RowBox[{"getDiskXZ", "[", "n1", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"neighbours", "[", 
     RowBox[{"g_", ",", "n_"}], "]"}], " ", ":=", "  ", 
    RowBox[{"Complement", "[", 
     RowBox[{
      RowBox[{"VertexList", "[", 
       RowBox[{"Graph", "[", 
        RowBox[{"EdgeList", "[", 
         RowBox[{"g", ",", 
          RowBox[{"n", "\[UndirectedEdge]", "_"}]}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", "n", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vectorsFromNode", "[", 
      RowBox[{"g_", ",", "n_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "nbrs", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nbrs", " ", ":=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Map", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"n", "\[DirectedEdge]", " ", "#"}], " ", "&"}], " ", 
             ",", " ", 
             RowBox[{"neighbours", "[", 
              RowBox[{"g", ",", "n"}], "]"}]}], "]"}], ",", 
           RowBox[{"Map", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"left", "[", "n", "]"}], "\[DirectedEdge]", " ", "#"}],
               " ", "&"}], " ", ",", " ", 
             RowBox[{"neighbours", "[", 
              RowBox[{"g", ",", 
               RowBox[{"left", "[", "n", "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Association", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", 
             RowBox[{"vectorXZ", "[", "#", "]"}]}], "&"}], ",", "nbrs"}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"clockwiseSortFunction", "[", "xy_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], "=", 
         RowBox[{"xy", "/", 
          RowBox[{"Norm", "[", "xy", "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"-", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"x", ">", "0"}], ",", 
           RowBox[{"1", "+", "y"}], ",", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"1", "+", "y"}], ")"}]}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"sorts", " ", "in", " ", "clockwise", " ", "order"}], " ", "*)"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"mostClockwiseEdgeFromNode", "[", 
      RowBox[{"g_", ",", "n_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "vectors", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vectors", " ", "=", " ", 
         RowBox[{"vectorsFromNode", "[", 
          RowBox[{"g", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "vectors", "]"}], "==", "0"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"Missing", "[", "]"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"vectors", " ", "=", " ", 
         RowBox[{"SortBy", "[", 
          RowBox[{"vectors", ",", "clockwiseSortFunction"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"First", "[", 
         RowBox[{"Keys", "[", "vectors", "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"topChain", "[", "graph_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "g", ",", "chain", ",", "neighbours", ",", "highestNode", ",", 
         "lastNode", ",", "nextNode", ",", "from", ",", "nextEdge", ",", 
         RowBox[{"chainMax", "=", "500"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "=", "graph"}], ";", "\[IndentingNewLine]", 
        RowBox[{"highestNode", "=", 
         RowBox[{"Last", "[", 
          RowBox[{"SortBy", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"VertexList", "[", "g", "]"}], ",", "bareNumberQ"}], 
             "]"}], ",", 
            RowBox[{
             RowBox[{"getDiskZ", "[", "#", "]"}], "&"}]}], "]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nbrs", "[", "n_", "]"}], " ", ":=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Map", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"n", "\[DirectedEdge]", " ", "#"}], " ", "&"}], " ", 
             ",", " ", 
             RowBox[{"neighbours", "[", 
              RowBox[{"g", ",", "n"}], "]"}]}], "]"}], ",", 
           RowBox[{"Map", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"left", "[", "n", "]"}], "\[DirectedEdge]", " ", "#"}],
               " ", "&"}], " ", ",", " ", 
             RowBox[{"neighbours", "[", 
              RowBox[{"g", ",", 
               RowBox[{"left", "[", "n", "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"chain", "=", " ", 
         RowBox[{"{", "highestNode", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", "chainMax"}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"lastNode", "=", 
             RowBox[{"Last", "[", "chain", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"nextEdge", " ", "=", 
             RowBox[{"mostClockwiseEdgeFromNode", "[", 
              RowBox[{"g", ",", "lastNode"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MissingQ", "[", "nextEdge", "]"}], ",", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "may", " ", "only", " ", "happen", " ", "for", " ", "1", " ", 
                RowBox[{"left", "[", "1", "]"}], " ", "megabodge"}], " ", 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"from", ",", "nextNode"}], "}"}], "=", 
             RowBox[{"List", "@@", "nextEdge"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MatchQ", "[", 
               RowBox[{"from", ",", 
                RowBox[{"left", "[", "_", "]"}]}], "]"}], ",", 
              RowBox[{"chain", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"chain", ",", "from"}], "]"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"chain", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"chain", ",", "nextNode"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"EdgeDelete", "[", 
              RowBox[{"g", ",", 
               RowBox[{"from", "\[UndirectedEdge]", "nextNode"}]}], "]"}]}], 
            ";"}], " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "could", " ", "move", " ", "up", " ", "into", " ", "backwards", 
             " ", "branch"}], " ", "*)"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MatchQ", "[", 
              RowBox[{
               RowBox[{"Last", "[", "chain", "]"}], ",", 
               RowBox[{"right", "[", "_", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"chain", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"chain", ",", 
                RowBox[{"moveNumberLeft", "[", 
                 RowBox[{"Last", "[", "chain", "]"}], "]"}]}], "]"}]}]}], 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "chain", "]"}], "==", 
              RowBox[{"First", "[", "chain", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Break", "[", "]"}], ";"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "==", "chainMax"}], ",", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<i10\>\"", "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]",
         "chain"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"23e63cff-41ae-4da1-ab93-1eb2e9df7891"],

Cell[BoxData[""], "Input",
 CellLabel->
  "In[216]:=",ExpressionUUID->"0f484384-5889-4ff3-88d7-8f8c1cc21f5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["supportPairsFromTopChain", "Subsection",ExpressionUUID->"900f452c-4418-404f-9471-5d58f41943c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"supportPairs", "[", "nextR_", "]"}], " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"supportGraph", ",", "supportChain"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"supportGraph", "=", "  ", 
        RowBox[{"Subgraph", "[", 
         RowBox[{
          RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], ",", 
          "globalLastSupportDiskNumbers"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "topchain", " ", "picks", " ", "the", " ", "top", " ", "of", " ", 
          "the", " ", "graph"}], ",", " ", 
         RowBox[{
         "but", " ", "is", " ", "faster", " ", "if", " ", "we", " ", "only", 
          " ", "supply", " ", "the", " ", "subgraph", " ", "corresponding", 
          " ", "to", " ", "the", " ", "current", " ", "support"}]}], " ", 
        "*)"}], " ", "\[IndentingNewLine]", 
       RowBox[{"supportChain", " ", "=", " ", 
        RowBox[{"topChain", "[", "supportGraph", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"globalLastSupportDiskNumbers", "=", 
        RowBox[{"disksInSupportChain", "[", 
         RowBox[{"supportGraph", ",", "supportChain", ",", "nextR"}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"supportPairsFromSupportDisks", "[", 
        RowBox[{"globalLastSupportDiskNumbers", ",", "nextR"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"disksInSupportChain", "[", 
     RowBox[{"g_", ",", "chain_", ",", "nextR_"}], "]"}], " ", ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"addLeftRightSupporters", "[", 
     RowBox[{"g", ",", 
      RowBox[{"DeleteDuplicates", "[", "chain", "]"}], ",", "nextR"}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addLeftRightSupporters", "[", 
    RowBox[{"g_", ",", "sDisks_", ",", "nextR_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"supportDisks", "=", "sDisks"}], ";", "\[IndentingNewLine]", 
      RowBox[{"supportDisks", "=", " ", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"bareNumber", "/@", " ", "supportDisks"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"supportDisks", " ", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"leftRightCouldSupport", "[", 
            RowBox[{"g", ",", "#", ",", "nextR"}], "]"}], "&"}], ",", 
          "supportDisks"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "supportDisks"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"supportPairsFromSupportDisks", "[", 
     RowBox[{"supportDisks_", ",", "nextR_"}], "]"}], " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "pairs", ",", "supportTable", ",", "extendedDisks", ",", "res"}], 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pairs", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"supportDisks", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"supportDisks", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "supportDisks", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "supportDisks", "]"}]}], "}"}]}], "]"}], 
          ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"supportTable", " ", "=", " ", 
        RowBox[{"Association", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"makeSupportTableRow", "[", "#", "]"}], "&"}], ",", 
           "pairs"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"assumes", " ", "r", " ", "nonincreasing"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"supportTable", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"supportTable", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "#EdgeSeparation", "]"}], "<", " ", 
            RowBox[{"2", "*", " ", "nextR"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "now", " ", "calculate", " ", "the", " ", "next", " ", "disk", " ", 
         "position", " ", "for", " ", "the", " ", "pair"}], " ", "*)"}], " ", 
       "\[IndentingNewLine]", 
       RowBox[{"supportTable", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", 
             RowBox[{"\"\<NextDisk\>\"", "->", 
              RowBox[{"diskOnThisPair", "[", 
               RowBox[{"#NextDiskRestsOn", ",", "nextR"}], "]"}]}]}], "]"}], 
           "&"}], ",", "supportTable"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"supportTable", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"supportTable", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MissingQ", "[", "#NextDisk", "]"}]}], "&"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"supportTable", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"supportTable", ",", 
          RowBox[{
           RowBox[{"diskIsNormalised", "[", "#NextDisk", "]"}], "&"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "check", " ", "for", " ", "disk", " ", "which", " ", "intersect", " ",
          "existing", " ", "disks"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
       RowBox[{"disksToCheckIntersection", "=", 
        RowBox[{"Association", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", " ", 
             RowBox[{"getDisk", "[", "#", "]"}]}], "&"}], ",", 
           "supportDisks"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"supportTable", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"supportTableFindIntersections", "[", 
            RowBox[{"#", ",", "nextR", ",", "disksToCheckIntersection"}], 
            "]"}], "&"}], ",", "supportTable"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"supportTable", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"supportTable", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#Intersection", "]"}], "==", "0"}], 
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "supportTable"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"leftRightCouldSupport", "[", 
     RowBox[{"g_", ",", "node_", ",", "nextR_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xy", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "=", " ", 
        RowBox[{"{", "node", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"xy", " ", "=", " ", 
        RowBox[{"getDiskXZ", "[", "node", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"xy", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], " ", ">=", 
          RowBox[{
           RowBox[{"-", "0.5"}], "-", "  ", 
           RowBox[{"2", "*", " ", "nextR"}]}]}], ",", 
         RowBox[{"res", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"res", ",", 
            RowBox[{"left", "[", "node", "]"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"xy", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], " ", "<=", "   ", 
          RowBox[{"0.5", "+", "  ", 
           RowBox[{"2", "*", " ", "nextR"}]}]}], ",", 
         RowBox[{"res", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"res", ",", 
            RowBox[{"right", "[", "node", "]"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "res"}]}], " ", "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeSupportTableRow", "[", 
    RowBox[{"{", 
     RowBox[{"node1_", ",", "node2_"}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", "hDiff"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hDiff", "=", " ", 
       RowBox[{
        RowBox[{"diskX", "[", 
         RowBox[{"getDisk", "[", "node2", "]"}], "]"}], "-", 
        RowBox[{"diskX", "[", 
         RowBox[{"getDisk", "[", "node1", "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"hDiff", "<=", " ", "0"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Nothing", "[", "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<NextDiskRestsOn\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"node1", ",", "node2"}], "}"}]}], "\[IndentingNewLine]", 
         ",", " ", 
         RowBox[{"\"\<EdgeSeparation\>\"", "->", 
          RowBox[{
           RowBox[{"diskLeftX", "[", 
            RowBox[{"getDisk", "[", "node2", "]"}], "]"}], "-", 
           RowBox[{"diskRightX", "[", 
            RowBox[{"getDisk", "[", "node1", "]"}], "]"}]}]}]}], " ", 
        "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"node1", ",", "node2"}], "}"}], "->", "res"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"supportTableFindIntersections", "[", 
     RowBox[{"row_", ",", "nextR_", ",", "disks_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "res", ",", "extendedDisks", ",", "locationIntersectsQ", ",", 
        "intersections"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"intersections", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diskdiskIntersectionQ", "[", 
            RowBox[{
             RowBox[{"row", "[", "\"\<NextDisk\>\"", "]"}], ",", "#"}], "]"}],
            "&"}], ",", 
          RowBox[{"KeyDrop", "[", 
           RowBox[{"disks", ",", 
            RowBox[{"row", "[", "\"\<NextDiskRestsOn\>\"", "]"}]}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"intersections", "=", " ", 
        RowBox[{"Keys", "@", 
         RowBox[{"Select", "[", " ", 
          RowBox[{"intersections", ",", "TrueQ"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Append", "[", 
        RowBox[{"row", ",", 
         RowBox[{"\"\<Intersection\>\"", "->", "intersections"}]}], "]"}]}]}],
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"diskOnThisPair", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n1_", ",", "n2_"}], "}"}], ",", "r_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "res", ",", "d1", ",", "d2", ",", "xl", ",", "xr", ",", "xres"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d1", " ", "=", " ", 
       RowBox[{"getDisk", "[", "n1", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"d2", " ", "=", " ", 
       RowBox[{"getDisk", "[", "n2", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"diskdiskUpperTouchingPoint", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"d1", ",", "d2"}], "}"}], ",", "r"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MissingQ", "[", "res", "]"}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"no", " ", "overlap"}], " ", "*)"}], " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Disk", "[", 
       RowBox[{"res", ",", "r"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"diskdiskIntersectionQ", "[", 
     RowBox[{
      RowBox[{"Disk", "[", 
       RowBox[{"xy1_", ",", "r1_"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{"xy2_", ",", "r2_"}], "]"}]}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"xy1", "-", "xy2"}], ",", "2"}], "]"}], " ", "<", " ", 
     RowBox[{"(", 
      RowBox[{"r1", "+", " ", "r2"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[1337]:=",ExpressionUUID->"02fccc85-fef0-4c13-84c1-f73552faeba6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["updateContactGraph", "Subsection",ExpressionUUID->"1010e017-b941-42de-9bd2-be5b0763ab01"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"updateContactGraph", "[", 
      RowBox[{"n_", ",", "disk_", ",", 
       RowBox[{"{", 
        RowBox[{"n1_", ",", "n2_"}], "}"}]}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", ",", "d", ",", "d1", ",", "d2", ",", "d1Left"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", " ", "=", " ", 
         RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", "=", " ", 
         RowBox[{"vertexAddDisk", "[", 
          RowBox[{"g", ",", "n", ",", "disk"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"bareNumberQ", "[", "n1", "]"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"g", "=", " ", 
           RowBox[{"vertexAddSideDisk", "[", 
            RowBox[{"g", ",", "n1"}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"bareNumberQ", "[", "n2", "]"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"g", "=", " ", 
           RowBox[{"vertexAddSideDisk", "[", 
            RowBox[{"g", ",", "n2"}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", "=", " ", 
         RowBox[{"EdgeAdd", "[", 
          RowBox[{"g", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"n", " ", "\[UndirectedEdge]", " ", "n1"}], ",", 
             RowBox[{"n", " ", "\[UndirectedEdge]", " ", "n2"}]}], " ", 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"globalRun", "[", "\"\<ContactGraph\>\"", "]"}], "=", "g"}], 
        ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[89]:=",ExpressionUUID->"7b6e07ad-c2cf-4ede-864a-e066b48066f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"vertexAddDisk", "[", 
    RowBox[{"g_", ",", "v_", ",", 
     RowBox[{"Disk", "[", 
      RowBox[{"xz_", ",", "r_"}], "]"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vxy", ",", "vr", ",", "res"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"VertexAdd", "[", 
        RowBox[{"g", ",", "v"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"AnnotationValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"res", ",", "v"}], "}"}], ",", "VertexCoordinates"}], 
          "]"}], "=", "xz"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AnnotationValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"res", ",", "v"}], "}"}], ",", "\"\<DiskRadius\>\""}], 
          "]"}], "=", "r"}], ";"}], "*)"}], "\[IndentingNewLine]", "res"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"vertexAddSideDisk", "[", 
     RowBox[{"g_", ",", "v_"}], "]"}], " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"res", ",", "baseDiskXZ", ",", "baseDiskR", ",", "xz"}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "=", " ", 
        RowBox[{"VertexAdd", "[", 
         RowBox[{"g", ",", "v"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"baseDiskXZ", "=", " ", 
          RowBox[{"AnnotationValue", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"res", ",", 
              RowBox[{"bareNumber", "[", "v", "]"}]}], "}"}], ",", 
            "VertexCoordinates"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"baseDiskR", "=", " ", 
          RowBox[{"AnnotationValue", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"res", ",", 
              RowBox[{"bareNumber", "[", "v", "]"}]}], "}"}], ",", 
            "\"\<DiskRadius\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MatchQ", "[", 
            RowBox[{"v", ",", 
             RowBox[{"left", "[", "_", "]"}]}], "]"}], ",", 
           RowBox[{"xz", "=", 
            RowBox[{"baseDiskXZ", "-", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MatchQ", "[", 
            RowBox[{"v", ",", 
             RowBox[{"right", "[", "_", "]"}]}], "]"}], ",", 
           RowBox[{"xz", "=", 
            RowBox[{"baseDiskXZ", "+", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AnnotationValue", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"res", ",", "v"}], "}"}], ",", "VertexCoordinates"}], 
           "]"}], "=", "xz"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AnnotationValue", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"res", ",", "v"}], "}"}], ",", "\"\<DiskRadius\>\""}], 
           "]"}], "=", "baseDiskR"}], ";"}], "\[IndentingNewLine]", "*)"}], 
       "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellLabel->"In[90]:=",ExpressionUUID->"a9cf26b1-be1e-4622-b662-546cfd655b8a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Disk calculations", "Section",ExpressionUUID->"bff67e66-cad0-497c-adf1-b1d32240d7a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"diskdiskUpperTouchingPoint", "[", 
      RowBox[{"pairDisks_", ",", "r_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "lrPoints", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lrPoints", "=", " ", 
         RowBox[{"newdiskdiskTouchingPoint", "[", 
          RowBox[{"pairDisks", ",", "r"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", "lrPoints", "]"}], ",", 
          RowBox[{"Return", "[", "lrPoints", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Last", "[", 
         RowBox[{"SortBy", "[", 
          RowBox[{"lrPoints", ",", 
           RowBox[{
            RowBox[{"N", "@", 
             RowBox[{"Last", "[", "#", "]"}]}], "&"}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[92]:=",ExpressionUUID->"f84550c7-7952-4387-a527-80b00981d42e"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"newdiskdiskTouchingPoint", "[", 
     RowBox[{"diskPair_", ",", "r_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c1", ",", "c2", ",", "r1", ",", "r2", ",", "interdisk", ",", 
        "interdiskVectorNorm", ",", "interdiskNormal", ",", 
        "\[IndentingNewLine]", "angle", ",", "vector", ",", "normal", ",", 
        "interdiskVector"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"c1", ",", "c2"}], "}"}], "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"diskXZ", ",", "diskPair"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r1", ",", "r2"}], "}"}], "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"diskR", ",", "diskPair"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"interdiskVector", " ", "=", " ", 
        RowBox[{"c2", "-", "c1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"interdisk", " ", "=", " ", 
        RowBox[{"Norm", "[", "interdiskVector", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"interdiskVectorNorm", " ", "=", " ", 
        RowBox[{"interdiskVector", "/", 
         RowBox[{"Norm", "[", "interdiskVector", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"interdiskNormal", " ", "=", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"interdiskVectorNorm", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"interdiskVectorNorm", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"angle", " ", "=", " ", 
        RowBox[{"sssTriangleInteriorAngle", "[", 
         RowBox[{
          RowBox[{"r2", "+", "r"}], ",", 
          RowBox[{"r", "+", "r1"}], ",", "interdisk"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MissingQ", "[", "angle", "]"}], ",", 
         RowBox[{"Return", "[", "angle", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vector", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r1", "+", "r"}], ")"}], "*", 
         RowBox[{"Cos", "[", "angle", "]"}], "*", "interdiskVectorNorm"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"normal", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r1", "+", "r"}], ")"}], "*", 
         RowBox[{"Sin", "[", "angle", "]"}], "*", " ", "interdiskNormal"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c1", "+", "vector", "+", "normal"}], ",", 
         RowBox[{"c1", "+", "vector", "-", "normal"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sssTriangleInteriorAngle", "[", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tri", ",", "angle"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tri", " ", "=", 
         RowBox[{"SSSTriangle", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "tri", "]"}], "==", "SSSTriangle"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"Missing", "[", "\"\<Not a triangle\>\"", "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"angle", " ", "=", " ", 
         RowBox[{"TriangleMeasurement", "[", 
          RowBox[{"tri", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<InteriorAngle\>\"", ",", "1"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", "angle"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[93]:=",ExpressionUUID->"852c2853-bfd6-4866-bf92-ccc59ded20a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Post run prettification", "Section",ExpressionUUID->"2e49cea5-0ab8-4bd6-953e-36c8829dd9b4"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"pretty", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", ",", "setGraphXY", ",", "res", ",", "vc", ",", "es"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "=", 
         RowBox[{"run", "[", "\"\<ContactGraph\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"vc", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"getDiskXZ", "[", 
             RowBox[{"run", ",", "#"}], "]"}], "&"}], ",", 
           RowBox[{"VertexList", "[", "g", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", " ", "=", " ", 
         RowBox[{"Graph", "[", 
          RowBox[{"g", ",", 
           RowBox[{"VertexCoordinates", "->", "vc"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"es", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", 
             RowBox[{"edgeStyle", "[", "#", "]"}]}], "&"}], ",", 
           RowBox[{"EdgeList", "[", "g", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", "=", " ", 
         RowBox[{"Graph", "[", 
          RowBox[{"g", ",", 
           RowBox[{"EdgeStyle", "->", "es"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"g", ",", 
           RowBox[{"VertexLabels", "->", "None"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", "=", "run"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", "[", "\"\<ContactGraph\>\"", "]"}], "=", "g"}], ";", 
        "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"edgeStyle", "[", 
     RowBox[{"upper_", " ", "\[UndirectedEdge]", " ", "lower_"}], "]"}], " ", 
    ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "vxy", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vxy", "=", 
        RowBox[{"vectorXZ", "[", 
         RowBox[{"upper", "\[UndirectedEdge]", " ", "lower"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "vxy", "]"}], ">=", " ", "0"}], ",", "Blue", 
         ",", "Red"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"edgeStyle", "[", 
     RowBox[{"upper_", " ", "\[DirectedEdge]", " ", "lower_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"edgeStyle", "[", 
     RowBox[{"upper", " ", "\[UndirectedEdge]", " ", "lower"}], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[95]:=",ExpressionUUID->"8585f538-fa91-4aed-9d43-3a8cd615890c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"lowerEdges", "[", 
      RowBox[{"g_", ",", "node_"}], "]"}], ":=", "  ", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"vectorsFromNode", "[", 
        RowBox[{"g", ",", "node"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Last", "[", "#", "]"}], "<", "0"}], "&"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"edgeCheck", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "=", 
         RowBox[{"run", "[", "\"\<ContactGraph\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"lowerEdges", "[", 
             RowBox[{"g", ",", "#"}], "]"}], "&"}], ",", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"VertexList", "[", "g", "]"}], ",", "bareNumberQ"}], 
              "]"}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Or", "@@", " ", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "!=", "2"}], "&"}], ",", 
             "res"}], "]"}]}], ",", 
          "\"\<Print some nodes without two supports\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"edgeStyler", "[", "edgeList_", "]"}], " ", ":=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{"edgeStyle", ",", "edgeList"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Sort", "@", 
              RowBox[{"edgeStyler", "[", 
               RowBox[{"Keys", "[", "#", "]"}], "]"}]}], "==", 
             RowBox[{"{", 
              RowBox[{
               TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
                "RGBColorSwatchTemplate"], ",", 
               TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
                "RGBColorSwatchTemplate"]}], "}"}]}], "&"}], ",", "res"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Or", "@@", " ", "res"}], ",", 
          "\"\<Print some lopsided nodes\>\""}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"postRun", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"res", ",", "chains"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"pretty", "[", "run", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"edgeCheck", "[", "res", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"chains", "=", " ", 
         RowBox[{"topdownChains", "[", 
          RowBox[{"res", "[", "\"\<ContactGraph\>\"", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"Prepend", "[", 
          RowBox[{"res", ",", 
           RowBox[{"\"\<Chains\>\"", "->", "chains"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", "[", "\"\<ContactGraph\>\"", "]"}], "=", 
         RowBox[{"reColour", "[", "res", "]"}]}], ";", "\[IndentingNewLine]", 
        "res"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"reColour", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", ",", "chains", ",", "v", ",", "e"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"chains", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{"#Chain", "&"}], ",", 
           RowBox[{"run", "[", "\"\<Chains\>\"", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vList", "[", "gr_", "]"}], " ", ":=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", 
             RowBox[{"AnnotationValue", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"gr", ",", "#"}], "}"}], ",", "VertexCoordinates"}], 
              "]"}]}], "&"}], ",", 
           RowBox[{"VertexList", "[", "gr", "]"}]}], "]"}]}], ";", 
        RowBox[{"v", "=", 
         RowBox[{"vList", "[", 
          RowBox[{"run", "[", "\"\<ContactGraph\>\"", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eList", "[", "gr_", "]"}], " ", ":=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", 
             RowBox[{"AnnotationValue", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"gr", ",", "#"}], "}"}], ",", "EdgeStyle"}], "]"}]}], 
            "&"}], ",", 
           RowBox[{"EdgeList", "[", "gr", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"chainEdges", "=", 
         RowBox[{"Association", "@", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Map", "[", 
            RowBox[{"eList", ",", 
             RowBox[{"Values", "@", "chains"}]}], "]"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"grayChains", "=", " ", 
         RowBox[{"Association", "@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "->", "Gray"}], "&"}], ",", 
            RowBox[{"EdgeList", "[", 
             RowBox[{"run", "[", "\"\<ContactGraph\>\"", "]"}], "]"}]}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"chainEdges", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"grayChains", ",", "chainEdges"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"Keys", "[", "v", "]"}], ",", 
          RowBox[{"Keys", "[", "chainEdges", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"VertexCoordinates", "->", 
           RowBox[{"Values", "[", "v", "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"EdgeStyle", "->", 
           RowBox[{"KeyValueMap", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "->", "#2"}], "&"}], ",", "chainEdges"}], 
            "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"topdownChains", "[", "graph_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "i", ",", "g", ",", "chainGraphSet", ",", "chain", ",", 
         "chainGraph"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "relies", " ", "on", " ", "looking", " ", "coordinates", " ", "up", 
          " ", "in", " ", "globalRun"}], " ", "..."}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"graph", ",", 
           RowBox[{"VertexLabels", "->", "\"\<Name\>\""}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"chainGraphSet", "=", 
         RowBox[{"List", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", "1000"}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"chain", "=", 
            RowBox[{"topChain", "[", "g", "]"}]}], ";", "\[IndentingNewLine]",
            "\[IndentingNewLine]", 
           RowBox[{"chainGraph", "=", 
            RowBox[{"Subgraph", "[", 
             RowBox[{"g", ",", "chain"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"chainGraph", "=", " ", 
            RowBox[{"Graph", "[", 
             RowBox[{"chainGraph", ",", 
              RowBox[{"VertexLabels", "->", "\"\<Name\>\""}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"chainGraphSet", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"chainGraphSet", ",", " ", "chainGraph"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"g", "=", 
            RowBox[{"stripChain", "[", 
             RowBox[{"g", ",", "chain"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"VertexList", "[", "g", "]"}], "]"}], "==", "0"}], ",", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"chainSet", "=", "\[IndentingNewLine]", 
         RowBox[{"Reverse", "@", 
          RowBox[{"Association", "@", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"First", "[", "#2", "]"}], "->", 
               RowBox[{"<|", 
                RowBox[{"\"\<Chain\>\"", "->", "#1"}], "|>"}]}], "&"}], ",", 
             RowBox[{"Reverse", "[", "chainGraphSet", "]"}]}], "]"}]}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"chainSet", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{"#", ",", 
              RowBox[{"\"\<Parastichy\>\"", "->", 
               RowBox[{"chainParastichy", "[", "#Chain", "]"}]}]}], "]"}], 
            "&"}], ",", "chainSet"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"chainSet", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{"#", ",", 
              RowBox[{"\"\<MeanZ\>\"", "->", 
               RowBox[{"chainMeanZ", "[", "#Chain", "]"}]}]}], "]"}], "&"}], 
           ",", "chainSet"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "chainSet"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"chainMeanZ", "[", "chain_", "]"}], " ", ":=", " ", 
     RowBox[{"Last", "@", 
      RowBox[{"Mean", "@", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"AnnotationValue", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"chain", ",", "#"}], "}"}], ",", "VertexCoordinates"}], 
           "]"}], "&"}], ",", 
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"VertexList", "[", "chain", "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}]}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"stripChain", "[", 
      RowBox[{"g_", ",", "chain_"}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "lrchain", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lrchain", " ", "=", 
         RowBox[{"leftAndRightNumbers", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"bareNumber", "/@", "chain"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"lrchain", "=", " ", 
         RowBox[{"Intersection", "[", 
          RowBox[{"lrchain", ",", 
           RowBox[{"VertexList", "[", "g", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"VertexDelete", "[", 
         RowBox[{"g", ",", "lrchain"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"chainParastichy", "[", "chain_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"AcyclicGraphQ", "[", "chain", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"acyclicChainParastichy", "[", "chain", "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"cyclicChainParastichy", "[", "chain", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"cyclicChainParastichy", "[", "chain_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"edges", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"FindCycle", "[", 
              RowBox[{"chain", ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "\[Infinity]"}], "}"}]}], "]"}], "]"}], "!=",
             "0"}], ",", 
           RowBox[{"Print", "[", "\"\<4cycle found\>\"", "]"}]}], "]"}], 
         ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"edges", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"FindCycle", "[", 
            RowBox[{"chain", ",", "Infinity", ",", "All"}], "]"}], ",", "2"}],
           "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"Association", "@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "->", 
              RowBox[{"EdgeDelete", "[", 
               RowBox[{"chain", ",", "#"}], "]"}]}], "&"}], ",", "edges"}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"res", ",", "gIsLinear"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"res", ",", "gIsChain"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "res", "]"}], "==", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"Missing", "[", "\"\<Can't decyclic\>\"", "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "res", "]"}], ">", "1"}], ",", 
            RowBox[{
             RowBox[{"w", "=", "res"}], ";", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<Multi decyclics\>\"", ",", "chain", ",", "res"}], 
              "]"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", "*)"}], 
        RowBox[{"res", "=", 
         RowBox[{"First", "[", "res", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"AcyclicGraphQ", "[", "res", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Can't declyce\>\"", ",", "chain"}], "]"}], ";", 
           RowBox[{"Return", "[", 
            RowBox[{"Missing", "[", "]"}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"acyclicChainParastichy", "[", "res", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gIsLinear", "[", "g_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"EdgeCount", "[", 
             RowBox[{"g", ",", 
              RowBox[{"#", "\[UndirectedEdge]", " ", "_"}]}], "]"}], "&"}], 
           ",", 
           RowBox[{"VertexList", "[", "g", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"And", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "<=", "2"}], "&"}], ",", "res"}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gIsChain", "[", "g_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v", ",", "first", ",", "last", ",", "graph"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"v", "=", 
         RowBox[{"VertexList", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"v", "=", 
         RowBox[{"SortBy", "[", 
          RowBox[{"v", ",", 
           RowBox[{
            RowBox[{"AnnotationValue", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"g", ",", "#"}], "}"}], ",", "VertexCoordinates"}], 
             "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"first", "=", 
         RowBox[{"First", "[", "v", "]"}]}], ";", 
        RowBox[{"last", "=", 
         RowBox[{"Last", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"graph", "=", 
         RowBox[{"VertexDelete", "[", 
          RowBox[{"g", ",", 
           RowBox[{"{", 
            RowBox[{"first", ",", "last"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ConnectedGraphQ", "[", "graph", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"acyclicChainParastichy", "[", "chain_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"AcyclicGraphQ", "[", "chain", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<aCP\>\"", "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"KeySort", "@", 
         RowBox[{"Counts", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"AnnotationValue", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"chain", ",", "#"}], "}"}], ",", "EdgeStyle"}], "]"}],
              "&"}], ",", 
            RowBox[{"EdgeList", "[", "chain", "]"}]}], "]"}], 
          "\[IndentingNewLine]", "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[1411]:=",ExpressionUUID->"cf4fbca8-16e4-41a8-ab10-c6e82f834d1a"],

Cell[BoxData[""], "Input",ExpressionUUID->"b11ffafd-c36c-44c8-8904-03c4b025b92a"]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{478.5, 527.5},
WindowMargins->{{-3.75, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e0a65ce9-d3e5-4751-af7c-19a13d9af0b6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 332, 9, 91, "Input",ExpressionUUID->"7d77eaad-7cce-48eb-b198-8dc4dd759adc",
 InitializationCell->True],
Cell[893, 31, 406, 11, 94, "Input",ExpressionUUID->"63698a6f-c9c8-4f3f-80bf-2e8b93070e6d"],
Cell[CellGroupData[{
Cell[1324, 46, 159, 3, 74, "Section",ExpressionUUID->"6ab48122-af17-4dcf-b0ec-7c9b2b450180"],
Cell[CellGroupData[{
Cell[1508, 53, 87, 0, 59, "Subsection",ExpressionUUID->"3fdd36e3-3992-4f1d-88ff-ec2aef2b86e3"],
Cell[1598, 55, 10464, 301, 1640, "Input",ExpressionUUID->"c79fdebc-f9ae-4df7-a656-4383f6352b8d",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12111, 362, 84, 0, 74, "Section",ExpressionUUID->"77a3141e-802f-42c1-8a57-5eddf8adc775"],
Cell[12198, 364, 3933, 89, 958, "Input",ExpressionUUID->"15e75fbe-967c-44f1-86aa-fa34b59eca50",
 InitializationCell->True],
Cell[16134, 455, 1627, 41, 300, "Input",ExpressionUUID->"6dbf7845-f16b-4a34-8ebf-111941a4cda1",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[17798, 501, 85, 0, 74, "Section",ExpressionUUID->"fe596e68-0dda-4801-93e2-f79621326472"],
Cell[17886, 503, 2362, 56, 551, "Input",ExpressionUUID->"a4b33fd4-cfad-47f7-b4b8-c7dc11ced13c",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[20273, 563, 103, 0, 59, "Subsection",ExpressionUUID->"fb7ad483-325c-48f9-903f-4c82bbc04077"],
Cell[20379, 565, 1208, 30, 258, "Input",ExpressionUUID->"a04cc5cb-f6d3-44cb-948c-5de7b31d7bb1",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[21624, 600, 85, 0, 59, "Subsection",ExpressionUUID->"32ddfbab-160a-4ef8-9688-21a17a7fd521"],
Cell[21712, 602, 9869, 245, 1683, "Input",ExpressionUUID->"23e63cff-41ae-4da1-ab93-1eb2e9df7891",
 InitializationCell->True],
Cell[31584, 849, 109, 2, 31, "Input",ExpressionUUID->"0f484384-5889-4ff3-88d7-8f8c1cc21f5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31730, 856, 101, 0, 59, "Subsection",ExpressionUUID->"900f452c-4418-404f-9471-5d58f41943c7"],
Cell[31834, 858, 13803, 349, 3063, "Input",ExpressionUUID->"02fccc85-fef0-4c13-84c1-f73552faeba6",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[45674, 1212, 95, 0, 59, "Subsection",ExpressionUUID->"1010e017-b941-42de-9bd2-be5b0763ab01"],
Cell[45772, 1214, 2235, 54, 447, "Input",ExpressionUUID->"7b6e07ad-c2cf-4ede-864a-e066b48066f4",
 InitializationCell->True],
Cell[48010, 1270, 3728, 97, 677, "Input",ExpressionUUID->"a9cf26b1-be1e-4622-b662-546cfd655b8a",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51787, 1373, 91, 0, 74, "Section",ExpressionUUID->"bff67e66-cad0-497c-adf1-b1d32240d7a9"],
Cell[51881, 1375, 1204, 30, 279, "Input",ExpressionUUID->"f84550c7-7952-4387-a527-80b00981d42e",
 InitializationCell->True],
Cell[53088, 1407, 4265, 103, 803, "Input",ExpressionUUID->"852c2853-bfd6-4866-bf92-ccc59ded20a4",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[57390, 1515, 97, 0, 74, "Section",ExpressionUUID->"2e49cea5-0ab8-4bd6-953e-36c8829dd9b4"],
Cell[57490, 1517, 2954, 77, 489, "Input",ExpressionUUID->"8585f538-fa91-4aed-9d43-3a8cd615890c",
 InitializationCell->True],
Cell[60447, 1596, 19233, 484, 3742, "Input",ExpressionUUID->"cf4fbca8-16e4-41a8-ab10-c6e82f834d1a",
 InitializationCell->True],
Cell[79683, 2082, 81, 0, 31, "Input",ExpressionUUID->"b11ffafd-c36c-44c8-8904-03c4b025b92a"]
}, Open  ]]
}
]
*)

