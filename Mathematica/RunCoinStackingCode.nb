(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     16121,        417]
NotebookOptionsPosition[     15265,        393]
NotebookOutlinePosition[     15770,        412]
CellTagsIndexPosition[     15727,        409]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Get", "[", 
    RowBox[{"\"\<CoinStackingCode.m\>\"", ",", 
     RowBox[{"Path", "->", 
      RowBox[{"{", 
       RowBox[{"PersistentSymbol", "[", 
        RowBox[{"\"\<persistentGitHubPath\>\"", ",", "\"\<Local\>\""}], "]"}],
        "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"\"\<LatticePhyllotaxis.m\>\"", ",", 
    RowBox[{"Path", "->", 
     RowBox[{"{", 
      RowBox[{"PersistentSymbol", "[", 
       RowBox[{"\"\<persistentGitHubPath\>\"", ",", "\"\<Local\>\""}], "]"}], 
      "}"}]}]}], "]"}], ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellFrameLabels->{{None, None}, {None, None}},
 CellLabel->
  "In[839]:=",ExpressionUUID->"9ea6b723-d3fd-40f4-a7e8-a833165f76e7"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"doParameterRun", "[", "experimentParameter_", "]"}], " ", ":=", 
    " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "run", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"run", " ", "=", " ", 
        RowBox[{"makeRunFromParameter", "[", "experimentParameter", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"run", "=", " ", 
        RowBox[{"CheckAbort", "[", 
         RowBox[{
          RowBox[{"executeRun", "[", "run", "]"}], ",", 
          RowBox[{"Missing", "[", "\"\<Aborted run\>\"", "]"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"debugLastRun", "=", " ", "run"}], ";", "\[IndentingNewLine]", 
       "run"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"makeRunFromParameter", "[", "experimentParameter_", "]"}], " ", 
     ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "lattice", ",", "run", ",", "arena", ",", "g", ",", "chainNumber"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lattice", " ", "=", " ", 
         RowBox[{"latticeOrthogonal", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"run", " ", "=", " ", 
         RowBox[{"runFromLattice", "[", "lattice", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", "run", "]"}], ",", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<mRFP Not implemented\>\"", "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"run", "[", "\"\<Arena\>\"", "]"}], " ", "=", " ", 
         RowBox[{"makeArena", "[", 
          RowBox[{"run", ",", "experimentParameter"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "run"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"runFromLattice", "[", "lattice_", "]"}], " ", ":=", "  ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", ",", "d"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"lattice", "[", "\"\<d\>\"", "]"}], "==", "0"}], " ", "&&",
              " ", 
             RowBox[{
              RowBox[{"lattice", "[", "\"\<h\>\"", "]"}], " ", "==", " ", 
              "1"}]}], ")"}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"Missing", "[", "\"\<Unimplemented\>\"", "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"g", "=", " ", 
         RowBox[{"Graph", "[", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"left", "[", "1", "]"}], "\[UndirectedEdge]", "1"}], ",", 
            RowBox[{"1", "\[UndirectedEdge]", 
             RowBox[{"right", "[", "1", "]"}]}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d", " ", "=", " ", 
         RowBox[{"<|", 
          RowBox[{"1", "->", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<DiskNumber\>\"", "->", "1"}], ",", 
             RowBox[{"\"\<Disk\>\"", "->", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.5"}], "]"}]}]}], 
            "|>"}]}], "|>"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<ContactGraph\>\"", "->", "g"}], ",", 
          RowBox[{"\"\<DiskData\>\"", "->", "d"}]}], "|>"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[841]:=",ExpressionUUID->"6579b71c-7c78-466e-8bdd-60f932470f18"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"smallestRadius", "[", "run_", "]"}], " ", ":=", " ", 
    RowBox[{"Min", "@", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"diskR", "[", 
         RowBox[{"getDiskFromRun", "[", 
          RowBox[{"run", ",", "#"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"Keys", "[", 
        RowBox[{"run", "[", "\"\<DiskData\>\"", "]"}], "]"}]}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeArena", "[", 
     RowBox[{"run_", ",", "runParameters_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "arenaAssociation", ",", "cylinderLU", "\[IndentingNewLine]", ",", "r",
         ",", "hBase", ",", "hStart", ",", "hEnd"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", "=", " ", 
        RowBox[{"smallestRadius", "[", "run", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"hBase", ",", "hStart", ",", "hEnd"}], "}"}], " ", "=", "  ", 
        RowBox[{"hRangeNeeded", "[", 
         RowBox[{
          RowBox[{"highestDiskZ", "[", "run", "]"}], ",", 
          RowBox[{"smallestRadius", "[", "run", "]"}], ",", 
          RowBox[{"runParameters", "[", "\"\<rSlope\>\"", "]"}], ",", 
          RowBox[{"runParameters", "[", "\"\<rScale\>\"", "]"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"hEnd", ">", " ", 
          RowBox[{"runParameters", "[", "\"\<zMax\>\"", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
         "Print", "[", "\"\<run stops while r still changing\>\"", "]"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<r fixed after\>\"", ",", "hEnd"}], "]"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"cylinderLU", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"hBase", "-", " ", 
           RowBox[{"2", " ", "r"}]}], ",", " ", 
          RowBox[{"runParameters", "[", "\"\<zMax\>\"", "]"}]}], "}"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"arenaAssociation", " ", "=", " ", 
        RowBox[{"<|", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\<rFunction\>\"", "->", 
           RowBox[{"createRofH", "[", 
            RowBox[{
             RowBox[{"highestDiskZ", "[", "run", "]"}], ",", 
             RowBox[{"smallestRadius", "[", "run", "]"}], ",", 
             RowBox[{"runParameters", "[", "\"\<rSlope\>\"", "]"}], ",", 
             RowBox[{"runParameters", "[", "\"\<rScale\>\"", "]"}]}], "]"}]}],
           "\[IndentingNewLine]", ",", 
          RowBox[{"\"\<rFixedAfter\>\"", "->", " ", "hEnd"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"\"\<CylinderLU\>\"", "->", " ", "cylinderLU"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"\"\<diskMax\>\"", "->", " ", 
           RowBox[{"runParameters", "[", "\"\<diskMax\>\"", "]"}]}]}], 
         "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", 
       "arenaAssociation"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"createRofH", "[", 
     RowBox[{"zMax_", ",", "rStart_", ",", "rSlope_", ",", "rScale_"}], "]"}],
     " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"r", ",", "hBase", ",", "hStart", ",", "hEnd"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"hBase", ",", "hStart", ",", "hEnd"}], "}"}], " ", "=", " ", 
        RowBox[{"hRangeNeeded", "[", 
         RowBox[{"zMax", ",", "rStart", ",", "rSlope", ",", "rScale"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"linearInterpolator", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"hStart", ",", "hEnd"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"rStart", ",", 
           RowBox[{"-", "rSlope"}]}], "}"}]}], "]"}]}]}], " ", 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"linearInterpolator", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"hStart_", ",", "hEnd_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"r_", ",", "rSlope_"}], "}"}]}], "]"}], " ", ":=", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "h", "}"}], ",", " ", 
      RowBox[{"r", "+", " ", 
       RowBox[{"Piecewise", "[", " ", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"h", "<", " ", "hStart"}]}], "}"}], "\[IndentingNewLine]",
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", "-", "hStart"}], ")"}], " ", "*", " ", "rSlope"}], 
            " ", ",", 
            RowBox[{
             RowBox[{"h", ">=", "hStart"}], " ", "&&", " ", 
             RowBox[{"h", "<", " ", "hEnd"}]}]}], "}"}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"hEnd", "-", "hStart"}], ")"}], " ", "*", " ", 
             "rSlope"}], " ", ",", 
            RowBox[{"h", ">", "hEnd"}]}], "}"}]}], "\[IndentingNewLine]", 
         "}"}], "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hRangeNeeded", "[", 
     RowBox[{"zBase_", ",", "rStart_", ",", "rSlope_", ",", "rScale_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "r", ",", "rEnd", ",", "hBase", ",", "hStart", ",", "hEnd", ",", 
        "hSlopeRange"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", " ", "=", " ", "rStart"}], ";", "\[IndentingNewLine]", 
       RowBox[{"rEnd", " ", "=", " ", 
        RowBox[{"r", "/", "rScale"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"hSlopeRange", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"rEnd", "-", "r"}], ")"}]}], "/", "rSlope"}]}], " ", ";", 
       "\[IndentingNewLine]", 
       RowBox[{"hBase", " ", "=", " ", "zBase"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"hStart", " ", "=", " ", 
        RowBox[{"hBase", " ", "+", " ", 
         RowBox[{"2", " ", "*", " ", "r"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"hEnd", " ", "=", " ", 
        RowBox[{"hStart", "+", " ", "hSlopeRange"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"hBase", ",", "hStart", ",", "hEnd"}], "}"}]}]}], " ", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellFrameLabels->{{None, None}, {None, None}},
 CellLabel->
  "In[864]:=",ExpressionUUID->"3fa4f6d0-e10b-4851-ae09-6b0796ee143b"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"makeExperimentParameters", "[", 
      RowBox[{"rScaleRange_", ",", "rSlopeRange_", ",", "zMaxRange_"}], "]"}],
      " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "experimentParameters", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"experimentParameters", " ", "=", " ", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Outer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<rScale\>\"", "->", "#1"}], ",", 
               RowBox[{"\"\<rSlope\>\"", "->", "#2"}], ",", 
               RowBox[{"\"\<zMax\>\"", "->", " ", "#3"}], ",", 
               RowBox[{"\"\<diskMax\>\"", "->", "\[Infinity]"}]}], "|>"}], 
             "&"}], ",", "rScaleRange", ",", "rSlopeRange", ",", 
            "zMaxRange"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"experimentParameters", " ", "=", " ", 
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"\"\<runNumber\>\"", "->", 
               RowBox[{"First", "[", "#2", "]"}]}]}], "]"}], "&"}], ",", 
           "experimentParameters"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "experimentParameters"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runParameterSets", "[", "experimentParameters_", "]"}], " ", ":=",
     " ", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Monitor", "[", 
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"#", ",", 
           RowBox[{"\"\<Results\>\"", "->", 
            RowBox[{"doParameterRun", "[", "#", "]"}]}]}], "]"}], ",", "#"}], 
        "]"}], "&"}], ",", "experimentParameters"}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[849]:=",ExpressionUUID->"8f6dc615-b126-41b4-97c8-697c4117cd6b"]
},
AutoGeneratedPackage->Automatic,
WindowSize->{478.5, 523.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1. Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"4c63b4ae-8efa-4b16-b17b-6f9f3ceaf210"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 942, 25, 235, "Input",ExpressionUUID->"9ea6b723-d3fd-40f4-a7e8-a833165f76e7",
 InitializationCell->True],
Cell[1503, 47, 4196, 104, 673, "Input",ExpressionUUID->"6579b71c-7c78-466e-8bdd-60f932470f18",
 InitializationCell->True],
Cell[5702, 153, 7425, 185, 1339, "Input",ExpressionUUID->"3fa4f6d0-e10b-4851-ae09-6b0796ee143b",
 InitializationCell->True],
Cell[13130, 340, 2131, 51, 425, "Input",ExpressionUUID->"8f6dc615-b126-41b4-97c8-697c4117cd6b",
 InitializationCell->True]
}
]
*)

