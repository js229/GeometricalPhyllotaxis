(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     21792,        544]
NotebookOptionsPosition[     20975,        520]
NotebookOutlinePosition[     21438,        538]
CellTagsIndexPosition[     21395,        535]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
     RowBox[{"AutoGeneratedPackage", "->", "Automatic"}]}], "]"}], ";"}], 
  "\n"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[34]:=",ExpressionUUID->"7d77eaad-7cce-48eb-b198-8dc4dd759adc"],

Cell[CellGroupData[{

Cell["Chain code", "Section",
 CellChangeTimes->{{3.8595354332704773`*^9, 
  3.8595354401520576`*^9}},ExpressionUUID->"6ab48122-af17-4dcf-b0ec-\
7c9b2b450180"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"diskZ", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "z_"}], "}"}], ",", "_"}], "]"}], "]"}], " ", ":=",
      " ", "z"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskX", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "_"}], "}"}], ",", "_"}], "]"}], "]"}], " ", ":=",
      " ", "x"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskRightX", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"x", "+", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskLeftX", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"x", "-", "r"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveDiskRight", "[", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "z_"}], "}"}], ",", "r_"}], "]"}], "]"}], " ", ":=",
      "\[IndentingNewLine]", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "+", "1"}], ",", "z"}], "}"}], ",", "r"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDisk", "[", 
      RowBox[{"n_", ",", "run_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"run", "[", "\"\<Chain\>\"", "]"}], "[", "\"\<Disks\>\"", 
       "]"}], "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDisk", "[", 
      RowBox[{
       RowBox[{"right", "[", "n_", "]"}], ",", "run_"}], "]"}], " ", ":=", 
     " ", 
     RowBox[{"moveDiskRight", "[", 
      RowBox[{"getDisk", "[", 
       RowBox[{"n", ",", "run"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nextRadius", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "highestZ", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"highestZ", "=", 
         RowBox[{"Max", "@", 
          RowBox[{"Map", "[", 
           RowBox[{"diskZ", ",", 
            RowBox[{"Values", "@", 
             RowBox[{
              RowBox[{"run", "[", "\"\<Chain\>\"", "]"}], "[", 
              "\"\<Disks\>\"", "]"}]}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"run", "[", "\"\<Arena\>\"", "]"}], "[", 
          "\"\<rFunction\>\"", "]"}], "[", "highestZ", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"initializeChainRun", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nextR", ",", "extendedDisks", ",", "res"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"extendedDisks", "=", " ", 
         RowBox[{
          RowBox[{"run", "[", "\"\<Chain\>\"", "]"}], "[", "\"\<Disks\>\"", 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nextR", "=", " ", 
         RowBox[{"nextRadius", "[", "run", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"disksMightOverlap", " ", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{"extendedDisks", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"diskX", "[", "#", "]"}], "+", "1"}], "<=", " ", 
             RowBox[{
              RowBox[{"1", "/", "2"}], "+", "nextR"}]}], " ", "&"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"disksMightOverlap", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Normal", "@", "extendedDisks"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"KeyValueMap", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"right", "[", "#1", "]"}], "->", " ", 
               RowBox[{"moveDiskRight", "[", "#2", "]"}]}], "&"}], ",", 
             "disksMightOverlap"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rightPossible", "[", " ", 
          RowBox[{"n_", "->", " ", "d_Disk"}], "]"}], " ", ":=", " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"diskX", "[", 
                RowBox[{"x", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], ">", 
               RowBox[{"diskX", "[", "d", "]"}]}], " ", "&&", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"diskRightX", "[", "d", "]"}], "+", 
                RowBox[{"2", "*", "nextR"}]}], " ", ">=", " ", 
               RowBox[{"diskLeftX", "[", 
                RowBox[{"x", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"n", ",", 
                 RowBox[{"First", "[", "#", "]"}]}], "}"}], "&"}], ",", 
              RowBox[{"Select", "[", " ", 
               RowBox[{"disksMightOverlap", ",", "f"}], "]"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"possibleOverlaps", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"rightPossible", ",", "disksMightOverlap"}], "]"}], ",", 
           "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"res", "=", "run"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", "[", "\"\<Chain\>\"", "]"}], "=", " ", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"res", "[", "\"\<Chain\>\"", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<Overlaps\>\"", "->", "possibleOverlaps"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"addNextDisk", "[", "run_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"next", ",", "path"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"next", "=", 
         RowBox[{"findNextDisk", "[", "run", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"path", "=", " ", 
         RowBox[{"FindShortestPath", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"run", "[", "\"\<Chain\>\"", "]"}], "[", "\"\<Graph\>\"", 
            "]"}], ",", 
           RowBox[{
            RowBox[{"next", "[", "\"\<RestsOn\>\"", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"next", "[", "\"\<RestsOn\>\"", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"path", " ", "=", " ", 
         RowBox[{"UndirectedEdge", "@@@", 
          RowBox[{"Partition", "[", 
           RowBox[{"path", ",", "2", ",", "1"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"res", "=", " ", "run"}], ";", "\[IndentingNewLine]", 
        RowBox[{"g", "=", " ", 
         RowBox[{
          RowBox[{"res", "[", "\"\<Chain\>\"", "]"}], "[", "\"\<Graph\>\"", 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"g", " ", "=", "  ", 
         RowBox[{"EdgeDelete", "[", 
          RowBox[{"g", ",", "path"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"g", "=", " ", 
         RowBox[{"EdgeAdd", "[", 
          RowBox[{"g", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"next", "[", "\"\<RestsOn\>\"", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "\[UndirectedEdge]", " ", 
              "n"}], ",", "\[IndentingNewLine]", 
             RowBox[{"n", " ", "\[UndirectedEdge]", " ", 
              RowBox[{
               RowBox[{"next", "[", "\"\<RestsOn\>\"", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], " ", "}"}]}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"res", "[", "\"\<Chain\>\"", "]"}], "[", "\"\<Graph\>\"", 
          "]"}], "=", "g"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"findNextDisk", "[", "run_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"nextR", "=", " ", 
         RowBox[{"nextRadius", "[", "run", "]"}]}], ",", "locations", ",", 
        "nextPair", ",", "nextCentre"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"locations", " ", "=", " ", 
        RowBox[{"Association", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", 
             RowBox[{"overlapLocations", "[", 
              RowBox[{"#", ",", "nextR", ",", "run"}], "]"}]}], "&"}], ",", 
           RowBox[{
            RowBox[{"run", "[", "\"\<Chain\>\"", "]"}], "[", 
            "\"\<Overlaps\>\"", "]"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"locations", " ", "=", " ", 
        RowBox[{"DeleteMissing", "[", "locations", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"locations", "=", " ", 
        RowBox[{"List", "@@", 
         RowBox[{"First", "@", 
          RowBox[{"Normal", "@", 
           RowBox[{"Sort", "@", "locations"}]}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nextPair", ",", "nextCentre"}], "}"}], "=", "locations"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Disk\>\"", "->", 
           RowBox[{"Disk", "[", 
            RowBox[{"nextCentre", ",", "nextR"}], "]"}]}], ",", 
          RowBox[{"\"\<RestsOn\>\"", "->", "nextPair"}]}], "|>"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"overlapLocations", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n1_", ",", "n2_"}], "}"}], ",", "r_", ",", "run_"}], "]"}], 
     " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"diskdiskUpperTouchingPoint", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"getDisk", "[", 
            RowBox[{"n1", ",", "run"}], "]"}], ",", 
           RowBox[{"getDisk", "[", 
            RowBox[{"n2", ",", "run"}], "]"}]}], "}"}], ",", "r"}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8595355232689533`*^9, 3.859535548507656*^9}, {
   3.8595355812605634`*^9, 3.8595356039837217`*^9}, 3.859535980427695*^9, {
   3.859537787961735*^9, 3.8595378166902814`*^9}, {3.8595378709849052`*^9, 
   3.8595378746659107`*^9}, {3.859548408766249*^9, 3.859548693435357*^9}, {
   3.8595487252177143`*^9, 3.8595487384123473`*^9}, {3.8595487837338943`*^9, 
   3.859548787225625*^9}, {3.8595491546797457`*^9, 3.8595494001917853`*^9}, {
   3.8595494501740446`*^9, 3.859549673906193*^9}, {3.8595497211610394`*^9, 
   3.859549803463643*^9}, {3.859549845328841*^9, 3.8595498883756323`*^9}, {
   3.859549930705818*^9, 3.8595499353586044`*^9}, {3.859550030796769*^9, 
   3.8595501741262956`*^9}, {3.8595502262812786`*^9, 3.859550412498247*^9}, {
   3.859550443832056*^9, 3.859550494098281*^9}, {3.8595505397155266`*^9, 
   3.859550547454463*^9}, {3.85955070979223*^9, 3.8595507836269436`*^9}, {
   3.8595508136598835`*^9, 3.8595509504636335`*^9}, {3.8595509811128488`*^9, 
   3.8595512599373693`*^9}, {3.859551304158172*^9, 3.8595513453854275`*^9}, {
   3.859551385384552*^9, 3.8595515088071985`*^9}, {3.8595515447332945`*^9, 
   3.8595515614999976`*^9}, {3.8595515950630026`*^9, 
   3.8595516578334994`*^9}, {3.8595516932079616`*^9, 
   3.8595517507798724`*^9}, {3.859551797128462*^9, 3.8595517976263065`*^9}, {
   3.8595518324398346`*^9, 3.859551880416995*^9}, {3.8595519137728386`*^9, 
   3.859551970693408*^9}, {3.85955213640696*^9, 3.859552186595783*^9}, 
   3.8595522234488077`*^9, {3.859552261174758*^9, 3.859552426402605*^9}, {
   3.859552457238233*^9, 3.859552487979121*^9}, {3.8595525499163485`*^9, 
   3.859552550868485*^9}, {3.859552597707198*^9, 3.8595530395370884`*^9}, {
   3.85955315670238*^9, 3.85955324310651*^9}, {3.859553337061211*^9, 
   3.8595535638123627`*^9}, {3.8595537406967225`*^9, 
   3.8595538067525034`*^9}},ExpressionUUID->"c79fdebc-f9ae-4df7-a656-\
4383f6352b8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"for", " ", "some", " ", "ics"}], ",", " ", 
    RowBox[{
     RowBox[{"couldn", "'"}], "t", " ", "guarantee", " ", "the", " ", "lower",
      " ", "one", " ", "is", " ", "discardable"}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "but", " ", "should", " ", "be", " ", "provided", " ", "pattern", " ", 
     "is", " ", "a", " ", "dropped", " ", "coin", " ", "one"}]}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"diskdiskUpperTouchingPoint", "[", 
      RowBox[{"pairDisks_", ",", "r_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "lrPoints", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lrPoints", "=", " ", 
         RowBox[{"diskdisktouchingPoint", "[", 
          RowBox[{"pairDisks", ",", "r"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", "lrPoints", "]"}], ",", 
          RowBox[{"Return", "[", "lrPoints", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Last", "[", 
         RowBox[{"SortBy", "[", 
          RowBox[{"lrPoints", ",", 
           RowBox[{
            RowBox[{"N", "@", 
             RowBox[{"Last", "[", "#", "]"}]}], "&"}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diskdisktouchingPoint", "[", 
      RowBox[{"pairDisks_", ",", "r_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "xy1", ",", "xy2", ",", "r1", ",", "r2", ",", "interdisk", ",", 
         "sTriangle", ",", "triangle", "\[IndentingNewLine]", ",", 
         "rTrianglePT", ",", "lTrianglePT", ",", "transform"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xy1", ",", "r1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"xy2", ",", "r2"}], "}"}]}], "}"}], "=", " ", 
         RowBox[{"List", "@@@", " ", "pairDisks"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"interdisk", " ", "=", " ", 
         RowBox[{"Norm", "[", 
          RowBox[{"xy1", "-", "xy2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"interdisk", " ", ">", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r1", "+", "r"}], ")"}], " ", "+", 
            RowBox[{"(", " ", 
             RowBox[{"r2", " ", "+", " ", "r"}], ")"}]}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"Missing", "[", "]"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Off", "[", 
         RowBox[{"SSSTriangle", "::", "tri"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sTriangle", " ", "=", 
         RowBox[{"SSSTriangle", "[", 
          RowBox[{
           RowBox[{"r", "+", "r2"}], ",", 
           RowBox[{"r", "+", "r1"}], ",", "interdisk"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"On", "[", 
         RowBox[{"SSSTriangle", "::", "tri"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "sTriangle", "]"}], "===", "SSSTriangle"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"Missing", "[", "]"}], "]"}]}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Abort", "[", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"triangle", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"List", "@", "sTriangle"}], ")"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"transform", " ", "=", 
         RowBox[{"Composition", "[", 
          RowBox[{
           RowBox[{"TranslationTransform", "[", "xy1", "]"}], ",", 
           RowBox[{"RotationTransform", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"triangle", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", 
               RowBox[{"triangle", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"xy2", "-", "xy1"}]}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rTrianglePT", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"transform", "[", "triangle", "]"}], ")"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"lTrianglePT", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"ReflectionTransform", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"RotationTransform", "[", 
               RowBox[{"90", " ", "Degree"}], "]"}], "[", 
              RowBox[{"xy2", "-", "xy1"}], "]"}], ",", "xy1"}], "]"}], ")"}], 
          "[", "rTrianglePT", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"rTrianglePT", ",", "lTrianglePT"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.856890650008703*^9, 3.85689067286756*^9}, {
   3.8568920185899725`*^9, 3.8568920625893984`*^9}, {3.8571152866804256`*^9, 
   3.8571153034394283`*^9}, {3.8571171134824324`*^9, 
   3.8571171413767424`*^9}, {3.8571171853168*^9, 3.8571172283028445`*^9}, 
   3.8571269932151995`*^9, {3.857127151449848*^9, 3.857127168930334*^9}, {
   3.8571273299195204`*^9, 3.8571273327408686`*^9}, {3.8571273879771347`*^9, 
   3.8571274361429415`*^9}, {3.8571274968993864`*^9, 
   3.8571275846370783`*^9}, {3.8571277374939375`*^9, 3.857127777817645*^9}, {
   3.8595520546920843`*^9, 3.8595521077101665`*^9}},
 CellLabel->
  "In[460]:=",ExpressionUUID->"f84550c7-7952-4387-a527-80b00981d42e"]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{479, 479},
WindowMargins->{{-5, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2cc5cbc0-b64c-4b9f-972e-d2d4fd863fe9"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 332, 9, 91, "Input",ExpressionUUID->"7d77eaad-7cce-48eb-b198-8dc4dd759adc",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[915, 33, 159, 3, 74, "Section",ExpressionUUID->"6ab48122-af17-4dcf-b0ec-7c9b2b450180"],
Cell[1077, 38, 13645, 329, 2024, "Input",ExpressionUUID->"c79fdebc-f9ae-4df7-a656-4383f6352b8d",
 InitializationCell->True],
Cell[14725, 369, 6234, 148, 1034, "Input",ExpressionUUID->"f84550c7-7952-4387-a527-80b00981d42e",
 InitializationCell->True]
}, Open  ]]
}
]
*)

